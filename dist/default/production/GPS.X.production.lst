

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 15 19:16:43 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16LF1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16LF1619 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011C                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  018E                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0199                     	;# 
   156  0199                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019A                     	;# 
   160  019A                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019C                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019D                     	;# 
   170  019D                     	;# 
   171  019D                     	;# 
   172  019E                     	;# 
   173  019E                     	;# 
   174  019E                     	;# 
   175  019F                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  020C                     	;# 
   181  020D                     	;# 
   182  020E                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0213                     	;# 
   189  0214                     	;# 
   190  0214                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0216                     	;# 
   196  0216                     	;# 
   197  0217                     	;# 
   198  0217                     	;# 
   199  028C                     	;# 
   200  028D                     	;# 
   201  028E                     	;# 
   202  0291                     	;# 
   203  0291                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0294                     	;# 
   207  0298                     	;# 
   208  0298                     	;# 
   209  0299                     	;# 
   210  029A                     	;# 
   211  029B                     	;# 
   212  029E                     	;# 
   213  030C                     	;# 
   214  030D                     	;# 
   215  030E                     	;# 
   216  038C                     	;# 
   217  038D                     	;# 
   218  038E                     	;# 
   219  0391                     	;# 
   220  0392                     	;# 
   221  0393                     	;# 
   222  0394                     	;# 
   223  0395                     	;# 
   224  0396                     	;# 
   225  0397                     	;# 
   226  0398                     	;# 
   227  0399                     	;# 
   228  040E                     	;# 
   229  0413                     	;# 
   230  0413                     	;# 
   231  0414                     	;# 
   232  0414                     	;# 
   233  0415                     	;# 
   234  0416                     	;# 
   235  0417                     	;# 
   236  0418                     	;# 
   237  041A                     	;# 
   238  041A                     	;# 
   239  041B                     	;# 
   240  041B                     	;# 
   241  041C                     	;# 
   242  041D                     	;# 
   243  041E                     	;# 
   244  041F                     	;# 
   245  0493                     	;# 
   246  0493                     	;# 
   247  0494                     	;# 
   248  0495                     	;# 
   249  0496                     	;# 
   250  049A                     	;# 
   251  049B                     	;# 
   252  049C                     	;# 
   253  049D                     	;# 
   254  058C                     	;# 
   255  058C                     	;# 
   256  058D                     	;# 
   257  058E                     	;# 
   258  058E                     	;# 
   259  058F                     	;# 
   260  0590                     	;# 
   261  0590                     	;# 
   262  0591                     	;# 
   263  0592                     	;# 
   264  0592                     	;# 
   265  0593                     	;# 
   266  0594                     	;# 
   267  0594                     	;# 
   268  0595                     	;# 
   269  0596                     	;# 
   270  0596                     	;# 
   271  0597                     	;# 
   272  0598                     	;# 
   273  0599                     	;# 
   274  059A                     	;# 
   275  059B                     	;# 
   276  059B                     	;# 
   277  059C                     	;# 
   278  059D                     	;# 
   279  060C                     	;# 
   280  060C                     	;# 
   281  060D                     	;# 
   282  060E                     	;# 
   283  060F                     	;# 
   284  060F                     	;# 
   285  0610                     	;# 
   286  0611                     	;# 
   287  0612                     	;# 
   288  0613                     	;# 
   289  0614                     	;# 
   290  0617                     	;# 
   291  0617                     	;# 
   292  0618                     	;# 
   293  0619                     	;# 
   294  061A                     	;# 
   295  061A                     	;# 
   296  061B                     	;# 
   297  061C                     	;# 
   298  0691                     	;# 
   299  0692                     	;# 
   300  0693                     	;# 
   301  0694                     	;# 
   302  0695                     	;# 
   303  0696                     	;# 
   304  0697                     	;# 
   305  0699                     	;# 
   306  069A                     	;# 
   307  0711                     	;# 
   308  0712                     	;# 
   309  0713                     	;# 
   310  0714                     	;# 
   311  0715                     	;# 
   312  0718                     	;# 
   313  0718                     	;# 
   314  0719                     	;# 
   315  071A                     	;# 
   316  071A                     	;# 
   317  071B                     	;# 
   318  071C                     	;# 
   319  071D                     	;# 
   320  0791                     	;# 
   321  0791                     	;# 
   322  0792                     	;# 
   323  0793                     	;# 
   324  0793                     	;# 
   325  0794                     	;# 
   326  0795                     	;# 
   327  0795                     	;# 
   328  0796                     	;# 
   329  0797                     	;# 
   330  0797                     	;# 
   331  0798                     	;# 
   332  0799                     	;# 
   333  079A                     	;# 
   334  080C                     	;# 
   335  080C                     	;# 
   336  080D                     	;# 
   337  080E                     	;# 
   338  080E                     	;# 
   339  080F                     	;# 
   340  0810                     	;# 
   341  0810                     	;# 
   342  0811                     	;# 
   343  0812                     	;# 
   344  0812                     	;# 
   345  0813                     	;# 
   346  0814                     	;# 
   347  0815                     	;# 
   348  0816                     	;# 
   349  0817                     	;# 
   350  0818                     	;# 
   351  0819                     	;# 
   352  081A                     	;# 
   353  081A                     	;# 
   354  081B                     	;# 
   355  081C                     	;# 
   356  081C                     	;# 
   357  081D                     	;# 
   358  088C                     	;# 
   359  088D                     	;# 
   360  088E                     	;# 
   361  088F                     	;# 
   362  088F                     	;# 
   363  0890                     	;# 
   364  0891                     	;# 
   365  0892                     	;# 
   366  0893                     	;# 
   367  0893                     	;# 
   368  0894                     	;# 
   369  0895                     	;# 
   370  0896                     	;# 
   371  0897                     	;# 
   372  0897                     	;# 
   373  0898                     	;# 
   374  0899                     	;# 
   375  0D8C                     	;# 
   376  0D8C                     	;# 
   377  0D8D                     	;# 
   378  0D8E                     	;# 
   379  0D8F                     	;# 
   380  0D8F                     	;# 
   381  0D90                     	;# 
   382  0D91                     	;# 
   383  0D92                     	;# 
   384  0D92                     	;# 
   385  0D93                     	;# 
   386  0D94                     	;# 
   387  0D95                     	;# 
   388  0D95                     	;# 
   389  0D96                     	;# 
   390  0D97                     	;# 
   391  0D98                     	;# 
   392  0D99                     	;# 
   393  0D9A                     	;# 
   394  0D9B                     	;# 
   395  0D9C                     	;# 
   396  0D9D                     	;# 
   397  0D9E                     	;# 
   398  0D9E                     	;# 
   399  0D9F                     	;# 
   400  0DA0                     	;# 
   401  0DA1                     	;# 
   402  0DA1                     	;# 
   403  0DA2                     	;# 
   404  0DA3                     	;# 
   405  0DA4                     	;# 
   406  0DA4                     	;# 
   407  0DA5                     	;# 
   408  0DA6                     	;# 
   409  0DA7                     	;# 
   410  0DA7                     	;# 
   411  0DA8                     	;# 
   412  0DA9                     	;# 
   413  0DAA                     	;# 
   414  0DAB                     	;# 
   415  0DAC                     	;# 
   416  0DAD                     	;# 
   417  0DAE                     	;# 
   418  0DAF                     	;# 
   419  0E0F                     	;# 
   420  0E10                     	;# 
   421  0E11                     	;# 
   422  0E12                     	;# 
   423  0E13                     	;# 
   424  0E14                     	;# 
   425  0E15                     	;# 
   426  0E16                     	;# 
   427  0E17                     	;# 
   428  0E18                     	;# 
   429  0E19                     	;# 
   430  0E1A                     	;# 
   431  0E1B                     	;# 
   432  0E1C                     	;# 
   433  0E1D                     	;# 
   434  0E1E                     	;# 
   435  0E1F                     	;# 
   436  0E20                     	;# 
   437  0E21                     	;# 
   438  0E22                     	;# 
   439  0E23                     	;# 
   440  0E24                     	;# 
   441  0E25                     	;# 
   442  0E26                     	;# 
   443  0E27                     	;# 
   444  0E28                     	;# 
   445  0E29                     	;# 
   446  0E2A                     	;# 
   447  0E2B                     	;# 
   448  0E2C                     	;# 
   449  0E2D                     	;# 
   450  0E2E                     	;# 
   451  0E90                     	;# 
   452  0E91                     	;# 
   453  0E92                     	;# 
   454  0E94                     	;# 
   455  0E95                     	;# 
   456  0E9C                     	;# 
   457  0E9D                     	;# 
   458  0E9E                     	;# 
   459  0E9F                     	;# 
   460  0EA0                     	;# 
   461  0EA1                     	;# 
   462  0EA2                     	;# 
   463  0EA3                     	;# 
   464  0EA4                     	;# 
   465  0EA5                     	;# 
   466  0EA6                     	;# 
   467  0EA7                     	;# 
   468  0F0F                     	;# 
   469  0F10                     	;# 
   470  0F11                     	;# 
   471  0F12                     	;# 
   472  0F13                     	;# 
   473  0F14                     	;# 
   474  0F15                     	;# 
   475  0F16                     	;# 
   476  0F17                     	;# 
   477  0F18                     	;# 
   478  0F19                     	;# 
   479  0F1A                     	;# 
   480  0F1B                     	;# 
   481  0F1C                     	;# 
   482  0F1D                     	;# 
   483  0F1E                     	;# 
   484  0F1F                     	;# 
   485  0F20                     	;# 
   486  0F21                     	;# 
   487  0F22                     	;# 
   488  0F23                     	;# 
   489  0F24                     	;# 
   490  0F25                     	;# 
   491  0F26                     	;# 
   492  0F27                     	;# 
   493  0F28                     	;# 
   494  0F29                     	;# 
   495  0F2A                     	;# 
   496  0F2B                     	;# 
   497  0F2C                     	;# 
   498  0F2D                     	;# 
   499  0F2E                     	;# 
   500  0F2F                     	;# 
   501  0F30                     	;# 
   502  0F31                     	;# 
   503  0F32                     	;# 
   504  0F33                     	;# 
   505  0F34                     	;# 
   506  0F35                     	;# 
   507  0F36                     	;# 
   508  0F37                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000D                     	;# 
   534  000E                     	;# 
   535  0010                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0013                     	;# 
   539  0014                     	;# 
   540  0015                     	;# 
   541  0016                     	;# 
   542  0016                     	;# 
   543  0017                     	;# 
   544  0018                     	;# 
   545  0019                     	;# 
   546  001A                     	;# 
   547  001A                     	;# 
   548  001B                     	;# 
   549  001B                     	;# 
   550  001C                     	;# 
   551  001D                     	;# 
   552  001E                     	;# 
   553  001F                     	;# 
   554  008C                     	;# 
   555  008D                     	;# 
   556  008E                     	;# 
   557  0090                     	;# 
   558  0091                     	;# 
   559  0092                     	;# 
   560  0093                     	;# 
   561  0094                     	;# 
   562  0095                     	;# 
   563  0096                     	;# 
   564  0098                     	;# 
   565  0099                     	;# 
   566  009A                     	;# 
   567  009B                     	;# 
   568  009B                     	;# 
   569  009C                     	;# 
   570  009D                     	;# 
   571  009E                     	;# 
   572  009F                     	;# 
   573  010C                     	;# 
   574  010D                     	;# 
   575  010E                     	;# 
   576  0111                     	;# 
   577  0112                     	;# 
   578  0113                     	;# 
   579  0114                     	;# 
   580  0115                     	;# 
   581  0116                     	;# 
   582  0117                     	;# 
   583  0118                     	;# 
   584  0119                     	;# 
   585  011C                     	;# 
   586  018C                     	;# 
   587  018D                     	;# 
   588  018E                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0194                     	;# 
   595  0195                     	;# 
   596  0196                     	;# 
   597  0199                     	;# 
   598  0199                     	;# 
   599  0199                     	;# 
   600  019A                     	;# 
   601  019A                     	;# 
   602  019A                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019C                     	;# 
   609  019C                     	;# 
   610  019C                     	;# 
   611  019D                     	;# 
   612  019D                     	;# 
   613  019D                     	;# 
   614  019E                     	;# 
   615  019E                     	;# 
   616  019E                     	;# 
   617  019F                     	;# 
   618  019F                     	;# 
   619  019F                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  020C                     	;# 
   623  020D                     	;# 
   624  020E                     	;# 
   625  0211                     	;# 
   626  0211                     	;# 
   627  0212                     	;# 
   628  0212                     	;# 
   629  0213                     	;# 
   630  0213                     	;# 
   631  0214                     	;# 
   632  0214                     	;# 
   633  0215                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0216                     	;# 
   638  0216                     	;# 
   639  0217                     	;# 
   640  0217                     	;# 
   641  028C                     	;# 
   642  028D                     	;# 
   643  028E                     	;# 
   644  0291                     	;# 
   645  0291                     	;# 
   646  0292                     	;# 
   647  0293                     	;# 
   648  0294                     	;# 
   649  0298                     	;# 
   650  0298                     	;# 
   651  0299                     	;# 
   652  029A                     	;# 
   653  029B                     	;# 
   654  029E                     	;# 
   655  030C                     	;# 
   656  030D                     	;# 
   657  030E                     	;# 
   658  038C                     	;# 
   659  038D                     	;# 
   660  038E                     	;# 
   661  0391                     	;# 
   662  0392                     	;# 
   663  0393                     	;# 
   664  0394                     	;# 
   665  0395                     	;# 
   666  0396                     	;# 
   667  0397                     	;# 
   668  0398                     	;# 
   669  0399                     	;# 
   670  040E                     	;# 
   671  0413                     	;# 
   672  0413                     	;# 
   673  0414                     	;# 
   674  0414                     	;# 
   675  0415                     	;# 
   676  0416                     	;# 
   677  0417                     	;# 
   678  0418                     	;# 
   679  041A                     	;# 
   680  041A                     	;# 
   681  041B                     	;# 
   682  041B                     	;# 
   683  041C                     	;# 
   684  041D                     	;# 
   685  041E                     	;# 
   686  041F                     	;# 
   687  0493                     	;# 
   688  0493                     	;# 
   689  0494                     	;# 
   690  0495                     	;# 
   691  0496                     	;# 
   692  049A                     	;# 
   693  049B                     	;# 
   694  049C                     	;# 
   695  049D                     	;# 
   696  058C                     	;# 
   697  058C                     	;# 
   698  058D                     	;# 
   699  058E                     	;# 
   700  058E                     	;# 
   701  058F                     	;# 
   702  0590                     	;# 
   703  0590                     	;# 
   704  0591                     	;# 
   705  0592                     	;# 
   706  0592                     	;# 
   707  0593                     	;# 
   708  0594                     	;# 
   709  0594                     	;# 
   710  0595                     	;# 
   711  0596                     	;# 
   712  0596                     	;# 
   713  0597                     	;# 
   714  0598                     	;# 
   715  0599                     	;# 
   716  059A                     	;# 
   717  059B                     	;# 
   718  059B                     	;# 
   719  059C                     	;# 
   720  059D                     	;# 
   721  060C                     	;# 
   722  060C                     	;# 
   723  060D                     	;# 
   724  060E                     	;# 
   725  060F                     	;# 
   726  060F                     	;# 
   727  0610                     	;# 
   728  0611                     	;# 
   729  0612                     	;# 
   730  0613                     	;# 
   731  0614                     	;# 
   732  0617                     	;# 
   733  0617                     	;# 
   734  0618                     	;# 
   735  0619                     	;# 
   736  061A                     	;# 
   737  061A                     	;# 
   738  061B                     	;# 
   739  061C                     	;# 
   740  0691                     	;# 
   741  0692                     	;# 
   742  0693                     	;# 
   743  0694                     	;# 
   744  0695                     	;# 
   745  0696                     	;# 
   746  0697                     	;# 
   747  0699                     	;# 
   748  069A                     	;# 
   749  0711                     	;# 
   750  0712                     	;# 
   751  0713                     	;# 
   752  0714                     	;# 
   753  0715                     	;# 
   754  0718                     	;# 
   755  0718                     	;# 
   756  0719                     	;# 
   757  071A                     	;# 
   758  071A                     	;# 
   759  071B                     	;# 
   760  071C                     	;# 
   761  071D                     	;# 
   762  0791                     	;# 
   763  0791                     	;# 
   764  0792                     	;# 
   765  0793                     	;# 
   766  0793                     	;# 
   767  0794                     	;# 
   768  0795                     	;# 
   769  0795                     	;# 
   770  0796                     	;# 
   771  0797                     	;# 
   772  0797                     	;# 
   773  0798                     	;# 
   774  0799                     	;# 
   775  079A                     	;# 
   776  080C                     	;# 
   777  080C                     	;# 
   778  080D                     	;# 
   779  080E                     	;# 
   780  080E                     	;# 
   781  080F                     	;# 
   782  0810                     	;# 
   783  0810                     	;# 
   784  0811                     	;# 
   785  0812                     	;# 
   786  0812                     	;# 
   787  0813                     	;# 
   788  0814                     	;# 
   789  0815                     	;# 
   790  0816                     	;# 
   791  0817                     	;# 
   792  0818                     	;# 
   793  0819                     	;# 
   794  081A                     	;# 
   795  081A                     	;# 
   796  081B                     	;# 
   797  081C                     	;# 
   798  081C                     	;# 
   799  081D                     	;# 
   800  088C                     	;# 
   801  088D                     	;# 
   802  088E                     	;# 
   803  088F                     	;# 
   804  088F                     	;# 
   805  0890                     	;# 
   806  0891                     	;# 
   807  0892                     	;# 
   808  0893                     	;# 
   809  0893                     	;# 
   810  0894                     	;# 
   811  0895                     	;# 
   812  0896                     	;# 
   813  0897                     	;# 
   814  0897                     	;# 
   815  0898                     	;# 
   816  0899                     	;# 
   817  0D8C                     	;# 
   818  0D8C                     	;# 
   819  0D8D                     	;# 
   820  0D8E                     	;# 
   821  0D8F                     	;# 
   822  0D8F                     	;# 
   823  0D90                     	;# 
   824  0D91                     	;# 
   825  0D92                     	;# 
   826  0D92                     	;# 
   827  0D93                     	;# 
   828  0D94                     	;# 
   829  0D95                     	;# 
   830  0D95                     	;# 
   831  0D96                     	;# 
   832  0D97                     	;# 
   833  0D98                     	;# 
   834  0D99                     	;# 
   835  0D9A                     	;# 
   836  0D9B                     	;# 
   837  0D9C                     	;# 
   838  0D9D                     	;# 
   839  0D9E                     	;# 
   840  0D9E                     	;# 
   841  0D9F                     	;# 
   842  0DA0                     	;# 
   843  0DA1                     	;# 
   844  0DA1                     	;# 
   845  0DA2                     	;# 
   846  0DA3                     	;# 
   847  0DA4                     	;# 
   848  0DA4                     	;# 
   849  0DA5                     	;# 
   850  0DA6                     	;# 
   851  0DA7                     	;# 
   852  0DA7                     	;# 
   853  0DA8                     	;# 
   854  0DA9                     	;# 
   855  0DAA                     	;# 
   856  0DAB                     	;# 
   857  0DAC                     	;# 
   858  0DAD                     	;# 
   859  0DAE                     	;# 
   860  0DAF                     	;# 
   861  0E0F                     	;# 
   862  0E10                     	;# 
   863  0E11                     	;# 
   864  0E12                     	;# 
   865  0E13                     	;# 
   866  0E14                     	;# 
   867  0E15                     	;# 
   868  0E16                     	;# 
   869  0E17                     	;# 
   870  0E18                     	;# 
   871  0E19                     	;# 
   872  0E1A                     	;# 
   873  0E1B                     	;# 
   874  0E1C                     	;# 
   875  0E1D                     	;# 
   876  0E1E                     	;# 
   877  0E1F                     	;# 
   878  0E20                     	;# 
   879  0E21                     	;# 
   880  0E22                     	;# 
   881  0E23                     	;# 
   882  0E24                     	;# 
   883  0E25                     	;# 
   884  0E26                     	;# 
   885  0E27                     	;# 
   886  0E28                     	;# 
   887  0E29                     	;# 
   888  0E2A                     	;# 
   889  0E2B                     	;# 
   890  0E2C                     	;# 
   891  0E2D                     	;# 
   892  0E2E                     	;# 
   893  0E90                     	;# 
   894  0E91                     	;# 
   895  0E92                     	;# 
   896  0E94                     	;# 
   897  0E95                     	;# 
   898  0E9C                     	;# 
   899  0E9D                     	;# 
   900  0E9E                     	;# 
   901  0E9F                     	;# 
   902  0EA0                     	;# 
   903  0EA1                     	;# 
   904  0EA2                     	;# 
   905  0EA3                     	;# 
   906  0EA4                     	;# 
   907  0EA5                     	;# 
   908  0EA6                     	;# 
   909  0EA7                     	;# 
   910  0F0F                     	;# 
   911  0F10                     	;# 
   912  0F11                     	;# 
   913  0F12                     	;# 
   914  0F13                     	;# 
   915  0F14                     	;# 
   916  0F15                     	;# 
   917  0F16                     	;# 
   918  0F17                     	;# 
   919  0F18                     	;# 
   920  0F19                     	;# 
   921  0F1A                     	;# 
   922  0F1B                     	;# 
   923  0F1C                     	;# 
   924  0F1D                     	;# 
   925  0F1E                     	;# 
   926  0F1F                     	;# 
   927  0F20                     	;# 
   928  0F21                     	;# 
   929  0F22                     	;# 
   930  0F23                     	;# 
   931  0F24                     	;# 
   932  0F25                     	;# 
   933  0F26                     	;# 
   934  0F27                     	;# 
   935  0F28                     	;# 
   936  0F29                     	;# 
   937  0F2A                     	;# 
   938  0F2B                     	;# 
   939  0F2C                     	;# 
   940  0F2D                     	;# 
   941  0F2E                     	;# 
   942  0F2F                     	;# 
   943  0F30                     	;# 
   944  0F31                     	;# 
   945  0F32                     	;# 
   946  0F33                     	;# 
   947  0F34                     	;# 
   948  0F35                     	;# 
   949  0F36                     	;# 
   950  0F37                     	;# 
   951  0FE4                     	;# 
   952  0FE5                     	;# 
   953  0FE6                     	;# 
   954  0FE7                     	;# 
   955  0FE8                     	;# 
   956  0FE9                     	;# 
   957  0FEA                     	;# 
   958  0FEB                     	;# 
   959  0FED                     	;# 
   960  0FEE                     	;# 
   961  0FEF                     	;# 
   962  0000                     	;# 
   963  0001                     	;# 
   964  0002                     	;# 
   965  0003                     	;# 
   966  0004                     	;# 
   967  0005                     	;# 
   968  0006                     	;# 
   969  0007                     	;# 
   970  0008                     	;# 
   971  0009                     	;# 
   972  000A                     	;# 
   973  000B                     	;# 
   974  000C                     	;# 
   975  000D                     	;# 
   976  000E                     	;# 
   977  0010                     	;# 
   978  0011                     	;# 
   979  0012                     	;# 
   980  0013                     	;# 
   981  0014                     	;# 
   982  0015                     	;# 
   983  0016                     	;# 
   984  0016                     	;# 
   985  0017                     	;# 
   986  0018                     	;# 
   987  0019                     	;# 
   988  001A                     	;# 
   989  001A                     	;# 
   990  001B                     	;# 
   991  001B                     	;# 
   992  001C                     	;# 
   993  001D                     	;# 
   994  001E                     	;# 
   995  001F                     	;# 
   996  008C                     	;# 
   997  008D                     	;# 
   998  008E                     	;# 
   999  0090                     	;# 
  1000  0091                     	;# 
  1001  0092                     	;# 
  1002  0093                     	;# 
  1003  0094                     	;# 
  1004  0095                     	;# 
  1005  0096                     	;# 
  1006  0098                     	;# 
  1007  0099                     	;# 
  1008  009A                     	;# 
  1009  009B                     	;# 
  1010  009B                     	;# 
  1011  009C                     	;# 
  1012  009D                     	;# 
  1013  009E                     	;# 
  1014  009F                     	;# 
  1015  010C                     	;# 
  1016  010D                     	;# 
  1017  010E                     	;# 
  1018  0111                     	;# 
  1019  0112                     	;# 
  1020  0113                     	;# 
  1021  0114                     	;# 
  1022  0115                     	;# 
  1023  0116                     	;# 
  1024  0117                     	;# 
  1025  0118                     	;# 
  1026  0119                     	;# 
  1027  011C                     	;# 
  1028  018C                     	;# 
  1029  018D                     	;# 
  1030  018E                     	;# 
  1031  0191                     	;# 
  1032  0191                     	;# 
  1033  0192                     	;# 
  1034  0193                     	;# 
  1035  0193                     	;# 
  1036  0194                     	;# 
  1037  0195                     	;# 
  1038  0196                     	;# 
  1039  0199                     	;# 
  1040  0199                     	;# 
  1041  0199                     	;# 
  1042  019A                     	;# 
  1043  019A                     	;# 
  1044  019A                     	;# 
  1045  019B                     	;# 
  1046  019B                     	;# 
  1047  019B                     	;# 
  1048  019B                     	;# 
  1049  019B                     	;# 
  1050  019C                     	;# 
  1051  019C                     	;# 
  1052  019C                     	;# 
  1053  019D                     	;# 
  1054  019D                     	;# 
  1055  019D                     	;# 
  1056  019E                     	;# 
  1057  019E                     	;# 
  1058  019E                     	;# 
  1059  019F                     	;# 
  1060  019F                     	;# 
  1061  019F                     	;# 
  1062  019F                     	;# 
  1063  019F                     	;# 
  1064  020C                     	;# 
  1065  020D                     	;# 
  1066  020E                     	;# 
  1067  0211                     	;# 
  1068  0211                     	;# 
  1069  0212                     	;# 
  1070  0212                     	;# 
  1071  0213                     	;# 
  1072  0213                     	;# 
  1073  0214                     	;# 
  1074  0214                     	;# 
  1075  0215                     	;# 
  1076  0215                     	;# 
  1077  0215                     	;# 
  1078  0215                     	;# 
  1079  0216                     	;# 
  1080  0216                     	;# 
  1081  0217                     	;# 
  1082  0217                     	;# 
  1083  028C                     	;# 
  1084  028D                     	;# 
  1085  028E                     	;# 
  1086  0291                     	;# 
  1087  0291                     	;# 
  1088  0292                     	;# 
  1089  0293                     	;# 
  1090  0294                     	;# 
  1091  0298                     	;# 
  1092  0298                     	;# 
  1093  0299                     	;# 
  1094  029A                     	;# 
  1095  029B                     	;# 
  1096  029E                     	;# 
  1097  030C                     	;# 
  1098  030D                     	;# 
  1099  030E                     	;# 
  1100  038C                     	;# 
  1101  038D                     	;# 
  1102  038E                     	;# 
  1103  0391                     	;# 
  1104  0392                     	;# 
  1105  0393                     	;# 
  1106  0394                     	;# 
  1107  0395                     	;# 
  1108  0396                     	;# 
  1109  0397                     	;# 
  1110  0398                     	;# 
  1111  0399                     	;# 
  1112  040E                     	;# 
  1113  0413                     	;# 
  1114  0413                     	;# 
  1115  0414                     	;# 
  1116  0414                     	;# 
  1117  0415                     	;# 
  1118  0416                     	;# 
  1119  0417                     	;# 
  1120  0418                     	;# 
  1121  041A                     	;# 
  1122  041A                     	;# 
  1123  041B                     	;# 
  1124  041B                     	;# 
  1125  041C                     	;# 
  1126  041D                     	;# 
  1127  041E                     	;# 
  1128  041F                     	;# 
  1129  0493                     	;# 
  1130  0493                     	;# 
  1131  0494                     	;# 
  1132  0495                     	;# 
  1133  0496                     	;# 
  1134  049A                     	;# 
  1135  049B                     	;# 
  1136  049C                     	;# 
  1137  049D                     	;# 
  1138  058C                     	;# 
  1139  058C                     	;# 
  1140  058D                     	;# 
  1141  058E                     	;# 
  1142  058E                     	;# 
  1143  058F                     	;# 
  1144  0590                     	;# 
  1145  0590                     	;# 
  1146  0591                     	;# 
  1147  0592                     	;# 
  1148  0592                     	;# 
  1149  0593                     	;# 
  1150  0594                     	;# 
  1151  0594                     	;# 
  1152  0595                     	;# 
  1153  0596                     	;# 
  1154  0596                     	;# 
  1155  0597                     	;# 
  1156  0598                     	;# 
  1157  0599                     	;# 
  1158  059A                     	;# 
  1159  059B                     	;# 
  1160  059B                     	;# 
  1161  059C                     	;# 
  1162  059D                     	;# 
  1163  060C                     	;# 
  1164  060C                     	;# 
  1165  060D                     	;# 
  1166  060E                     	;# 
  1167  060F                     	;# 
  1168  060F                     	;# 
  1169  0610                     	;# 
  1170  0611                     	;# 
  1171  0612                     	;# 
  1172  0613                     	;# 
  1173  0614                     	;# 
  1174  0617                     	;# 
  1175  0617                     	;# 
  1176  0618                     	;# 
  1177  0619                     	;# 
  1178  061A                     	;# 
  1179  061A                     	;# 
  1180  061B                     	;# 
  1181  061C                     	;# 
  1182  0691                     	;# 
  1183  0692                     	;# 
  1184  0693                     	;# 
  1185  0694                     	;# 
  1186  0695                     	;# 
  1187  0696                     	;# 
  1188  0697                     	;# 
  1189  0699                     	;# 
  1190  069A                     	;# 
  1191  0711                     	;# 
  1192  0712                     	;# 
  1193  0713                     	;# 
  1194  0714                     	;# 
  1195  0715                     	;# 
  1196  0718                     	;# 
  1197  0718                     	;# 
  1198  0719                     	;# 
  1199  071A                     	;# 
  1200  071A                     	;# 
  1201  071B                     	;# 
  1202  071C                     	;# 
  1203  071D                     	;# 
  1204  0791                     	;# 
  1205  0791                     	;# 
  1206  0792                     	;# 
  1207  0793                     	;# 
  1208  0793                     	;# 
  1209  0794                     	;# 
  1210  0795                     	;# 
  1211  0795                     	;# 
  1212  0796                     	;# 
  1213  0797                     	;# 
  1214  0797                     	;# 
  1215  0798                     	;# 
  1216  0799                     	;# 
  1217  079A                     	;# 
  1218  080C                     	;# 
  1219  080C                     	;# 
  1220  080D                     	;# 
  1221  080E                     	;# 
  1222  080E                     	;# 
  1223  080F                     	;# 
  1224  0810                     	;# 
  1225  0810                     	;# 
  1226  0811                     	;# 
  1227  0812                     	;# 
  1228  0812                     	;# 
  1229  0813                     	;# 
  1230  0814                     	;# 
  1231  0815                     	;# 
  1232  0816                     	;# 
  1233  0817                     	;# 
  1234  0818                     	;# 
  1235  0819                     	;# 
  1236  081A                     	;# 
  1237  081A                     	;# 
  1238  081B                     	;# 
  1239  081C                     	;# 
  1240  081C                     	;# 
  1241  081D                     	;# 
  1242  088C                     	;# 
  1243  088D                     	;# 
  1244  088E                     	;# 
  1245  088F                     	;# 
  1246  088F                     	;# 
  1247  0890                     	;# 
  1248  0891                     	;# 
  1249  0892                     	;# 
  1250  0893                     	;# 
  1251  0893                     	;# 
  1252  0894                     	;# 
  1253  0895                     	;# 
  1254  0896                     	;# 
  1255  0897                     	;# 
  1256  0897                     	;# 
  1257  0898                     	;# 
  1258  0899                     	;# 
  1259  0D8C                     	;# 
  1260  0D8C                     	;# 
  1261  0D8D                     	;# 
  1262  0D8E                     	;# 
  1263  0D8F                     	;# 
  1264  0D8F                     	;# 
  1265  0D90                     	;# 
  1266  0D91                     	;# 
  1267  0D92                     	;# 
  1268  0D92                     	;# 
  1269  0D93                     	;# 
  1270  0D94                     	;# 
  1271  0D95                     	;# 
  1272  0D95                     	;# 
  1273  0D96                     	;# 
  1274  0D97                     	;# 
  1275  0D98                     	;# 
  1276  0D99                     	;# 
  1277  0D9A                     	;# 
  1278  0D9B                     	;# 
  1279  0D9C                     	;# 
  1280  0D9D                     	;# 
  1281  0D9E                     	;# 
  1282  0D9E                     	;# 
  1283  0D9F                     	;# 
  1284  0DA0                     	;# 
  1285  0DA1                     	;# 
  1286  0DA1                     	;# 
  1287  0DA2                     	;# 
  1288  0DA3                     	;# 
  1289  0DA4                     	;# 
  1290  0DA4                     	;# 
  1291  0DA5                     	;# 
  1292  0DA6                     	;# 
  1293  0DA7                     	;# 
  1294  0DA7                     	;# 
  1295  0DA8                     	;# 
  1296  0DA9                     	;# 
  1297  0DAA                     	;# 
  1298  0DAB                     	;# 
  1299  0DAC                     	;# 
  1300  0DAD                     	;# 
  1301  0DAE                     	;# 
  1302  0DAF                     	;# 
  1303  0E0F                     	;# 
  1304  0E10                     	;# 
  1305  0E11                     	;# 
  1306  0E12                     	;# 
  1307  0E13                     	;# 
  1308  0E14                     	;# 
  1309  0E15                     	;# 
  1310  0E16                     	;# 
  1311  0E17                     	;# 
  1312  0E18                     	;# 
  1313  0E19                     	;# 
  1314  0E1A                     	;# 
  1315  0E1B                     	;# 
  1316  0E1C                     	;# 
  1317  0E1D                     	;# 
  1318  0E1E                     	;# 
  1319  0E1F                     	;# 
  1320  0E20                     	;# 
  1321  0E21                     	;# 
  1322  0E22                     	;# 
  1323  0E23                     	;# 
  1324  0E24                     	;# 
  1325  0E25                     	;# 
  1326  0E26                     	;# 
  1327  0E27                     	;# 
  1328  0E28                     	;# 
  1329  0E29                     	;# 
  1330  0E2A                     	;# 
  1331  0E2B                     	;# 
  1332  0E2C                     	;# 
  1333  0E2D                     	;# 
  1334  0E2E                     	;# 
  1335  0E90                     	;# 
  1336  0E91                     	;# 
  1337  0E92                     	;# 
  1338  0E94                     	;# 
  1339  0E95                     	;# 
  1340  0E9C                     	;# 
  1341  0E9D                     	;# 
  1342  0E9E                     	;# 
  1343  0E9F                     	;# 
  1344  0EA0                     	;# 
  1345  0EA1                     	;# 
  1346  0EA2                     	;# 
  1347  0EA3                     	;# 
  1348  0EA4                     	;# 
  1349  0EA5                     	;# 
  1350  0EA6                     	;# 
  1351  0EA7                     	;# 
  1352  0F0F                     	;# 
  1353  0F10                     	;# 
  1354  0F11                     	;# 
  1355  0F12                     	;# 
  1356  0F13                     	;# 
  1357  0F14                     	;# 
  1358  0F15                     	;# 
  1359  0F16                     	;# 
  1360  0F17                     	;# 
  1361  0F18                     	;# 
  1362  0F19                     	;# 
  1363  0F1A                     	;# 
  1364  0F1B                     	;# 
  1365  0F1C                     	;# 
  1366  0F1D                     	;# 
  1367  0F1E                     	;# 
  1368  0F1F                     	;# 
  1369  0F20                     	;# 
  1370  0F21                     	;# 
  1371  0F22                     	;# 
  1372  0F23                     	;# 
  1373  0F24                     	;# 
  1374  0F25                     	;# 
  1375  0F26                     	;# 
  1376  0F27                     	;# 
  1377  0F28                     	;# 
  1378  0F29                     	;# 
  1379  0F2A                     	;# 
  1380  0F2B                     	;# 
  1381  0F2C                     	;# 
  1382  0F2D                     	;# 
  1383  0F2E                     	;# 
  1384  0F2F                     	;# 
  1385  0F30                     	;# 
  1386  0F31                     	;# 
  1387  0F32                     	;# 
  1388  0F33                     	;# 
  1389  0F34                     	;# 
  1390  0F35                     	;# 
  1391  0F36                     	;# 
  1392  0F37                     	;# 
  1393  0FE4                     	;# 
  1394  0FE5                     	;# 
  1395  0FE6                     	;# 
  1396  0FE7                     	;# 
  1397  0FE8                     	;# 
  1398  0FE9                     	;# 
  1399  0FEA                     	;# 
  1400  0FEB                     	;# 
  1401  0FED                     	;# 
  1402  0FEE                     	;# 
  1403  0FEF                     	;# 
  1404  0000                     	;# 
  1405  0001                     	;# 
  1406  0002                     	;# 
  1407  0003                     	;# 
  1408  0004                     	;# 
  1409  0005                     	;# 
  1410  0006                     	;# 
  1411  0007                     	;# 
  1412  0008                     	;# 
  1413  0009                     	;# 
  1414  000A                     	;# 
  1415  000B                     	;# 
  1416  000C                     	;# 
  1417  000D                     	;# 
  1418  000E                     	;# 
  1419  0010                     	;# 
  1420  0011                     	;# 
  1421  0012                     	;# 
  1422  0013                     	;# 
  1423  0014                     	;# 
  1424  0015                     	;# 
  1425  0016                     	;# 
  1426  0016                     	;# 
  1427  0017                     	;# 
  1428  0018                     	;# 
  1429  0019                     	;# 
  1430  001A                     	;# 
  1431  001A                     	;# 
  1432  001B                     	;# 
  1433  001B                     	;# 
  1434  001C                     	;# 
  1435  001D                     	;# 
  1436  001E                     	;# 
  1437  001F                     	;# 
  1438  008C                     	;# 
  1439  008D                     	;# 
  1440  008E                     	;# 
  1441  0090                     	;# 
  1442  0091                     	;# 
  1443  0092                     	;# 
  1444  0093                     	;# 
  1445  0094                     	;# 
  1446  0095                     	;# 
  1447  0096                     	;# 
  1448  0098                     	;# 
  1449  0099                     	;# 
  1450  009A                     	;# 
  1451  009B                     	;# 
  1452  009B                     	;# 
  1453  009C                     	;# 
  1454  009D                     	;# 
  1455  009E                     	;# 
  1456  009F                     	;# 
  1457  010C                     	;# 
  1458  010D                     	;# 
  1459  010E                     	;# 
  1460  0111                     	;# 
  1461  0112                     	;# 
  1462  0113                     	;# 
  1463  0114                     	;# 
  1464  0115                     	;# 
  1465  0116                     	;# 
  1466  0117                     	;# 
  1467  0118                     	;# 
  1468  0119                     	;# 
  1469  011C                     	;# 
  1470  018C                     	;# 
  1471  018D                     	;# 
  1472  018E                     	;# 
  1473  0191                     	;# 
  1474  0191                     	;# 
  1475  0192                     	;# 
  1476  0193                     	;# 
  1477  0193                     	;# 
  1478  0194                     	;# 
  1479  0195                     	;# 
  1480  0196                     	;# 
  1481  0199                     	;# 
  1482  0199                     	;# 
  1483  0199                     	;# 
  1484  019A                     	;# 
  1485  019A                     	;# 
  1486  019A                     	;# 
  1487  019B                     	;# 
  1488  019B                     	;# 
  1489  019B                     	;# 
  1490  019B                     	;# 
  1491  019B                     	;# 
  1492  019C                     	;# 
  1493  019C                     	;# 
  1494  019C                     	;# 
  1495  019D                     	;# 
  1496  019D                     	;# 
  1497  019D                     	;# 
  1498  019E                     	;# 
  1499  019E                     	;# 
  1500  019E                     	;# 
  1501  019F                     	;# 
  1502  019F                     	;# 
  1503  019F                     	;# 
  1504  019F                     	;# 
  1505  019F                     	;# 
  1506  020C                     	;# 
  1507  020D                     	;# 
  1508  020E                     	;# 
  1509  0211                     	;# 
  1510  0211                     	;# 
  1511  0212                     	;# 
  1512  0212                     	;# 
  1513  0213                     	;# 
  1514  0213                     	;# 
  1515  0214                     	;# 
  1516  0214                     	;# 
  1517  0215                     	;# 
  1518  0215                     	;# 
  1519  0215                     	;# 
  1520  0215                     	;# 
  1521  0216                     	;# 
  1522  0216                     	;# 
  1523  0217                     	;# 
  1524  0217                     	;# 
  1525  028C                     	;# 
  1526  028D                     	;# 
  1527  028E                     	;# 
  1528  0291                     	;# 
  1529  0291                     	;# 
  1530  0292                     	;# 
  1531  0293                     	;# 
  1532  0294                     	;# 
  1533  0298                     	;# 
  1534  0298                     	;# 
  1535  0299                     	;# 
  1536  029A                     	;# 
  1537  029B                     	;# 
  1538  029E                     	;# 
  1539  030C                     	;# 
  1540  030D                     	;# 
  1541  030E                     	;# 
  1542  038C                     	;# 
  1543  038D                     	;# 
  1544  038E                     	;# 
  1545  0391                     	;# 
  1546  0392                     	;# 
  1547  0393                     	;# 
  1548  0394                     	;# 
  1549  0395                     	;# 
  1550  0396                     	;# 
  1551  0397                     	;# 
  1552  0398                     	;# 
  1553  0399                     	;# 
  1554  040E                     	;# 
  1555  0413                     	;# 
  1556  0413                     	;# 
  1557  0414                     	;# 
  1558  0414                     	;# 
  1559  0415                     	;# 
  1560  0416                     	;# 
  1561  0417                     	;# 
  1562  0418                     	;# 
  1563  041A                     	;# 
  1564  041A                     	;# 
  1565  041B                     	;# 
  1566  041B                     	;# 
  1567  041C                     	;# 
  1568  041D                     	;# 
  1569  041E                     	;# 
  1570  041F                     	;# 
  1571  0493                     	;# 
  1572  0493                     	;# 
  1573  0494                     	;# 
  1574  0495                     	;# 
  1575  0496                     	;# 
  1576  049A                     	;# 
  1577  049B                     	;# 
  1578  049C                     	;# 
  1579  049D                     	;# 
  1580  058C                     	;# 
  1581  058C                     	;# 
  1582  058D                     	;# 
  1583  058E                     	;# 
  1584  058E                     	;# 
  1585  058F                     	;# 
  1586  0590                     	;# 
  1587  0590                     	;# 
  1588  0591                     	;# 
  1589  0592                     	;# 
  1590  0592                     	;# 
  1591  0593                     	;# 
  1592  0594                     	;# 
  1593  0594                     	;# 
  1594  0595                     	;# 
  1595  0596                     	;# 
  1596  0596                     	;# 
  1597  0597                     	;# 
  1598  0598                     	;# 
  1599  0599                     	;# 
  1600  059A                     	;# 
  1601  059B                     	;# 
  1602  059B                     	;# 
  1603  059C                     	;# 
  1604  059D                     	;# 
  1605  060C                     	;# 
  1606  060C                     	;# 
  1607  060D                     	;# 
  1608  060E                     	;# 
  1609  060F                     	;# 
  1610  060F                     	;# 
  1611  0610                     	;# 
  1612  0611                     	;# 
  1613  0612                     	;# 
  1614  0613                     	;# 
  1615  0614                     	;# 
  1616  0617                     	;# 
  1617  0617                     	;# 
  1618  0618                     	;# 
  1619  0619                     	;# 
  1620  061A                     	;# 
  1621  061A                     	;# 
  1622  061B                     	;# 
  1623  061C                     	;# 
  1624  0691                     	;# 
  1625  0692                     	;# 
  1626  0693                     	;# 
  1627  0694                     	;# 
  1628  0695                     	;# 
  1629  0696                     	;# 
  1630  0697                     	;# 
  1631  0699                     	;# 
  1632  069A                     	;# 
  1633  0711                     	;# 
  1634  0712                     	;# 
  1635  0713                     	;# 
  1636  0714                     	;# 
  1637  0715                     	;# 
  1638  0718                     	;# 
  1639  0718                     	;# 
  1640  0719                     	;# 
  1641  071A                     	;# 
  1642  071A                     	;# 
  1643  071B                     	;# 
  1644  071C                     	;# 
  1645  071D                     	;# 
  1646  0791                     	;# 
  1647  0791                     	;# 
  1648  0792                     	;# 
  1649  0793                     	;# 
  1650  0793                     	;# 
  1651  0794                     	;# 
  1652  0795                     	;# 
  1653  0795                     	;# 
  1654  0796                     	;# 
  1655  0797                     	;# 
  1656  0797                     	;# 
  1657  0798                     	;# 
  1658  0799                     	;# 
  1659  079A                     	;# 
  1660  080C                     	;# 
  1661  080C                     	;# 
  1662  080D                     	;# 
  1663  080E                     	;# 
  1664  080E                     	;# 
  1665  080F                     	;# 
  1666  0810                     	;# 
  1667  0810                     	;# 
  1668  0811                     	;# 
  1669  0812                     	;# 
  1670  0812                     	;# 
  1671  0813                     	;# 
  1672  0814                     	;# 
  1673  0815                     	;# 
  1674  0816                     	;# 
  1675  0817                     	;# 
  1676  0818                     	;# 
  1677  0819                     	;# 
  1678  081A                     	;# 
  1679  081A                     	;# 
  1680  081B                     	;# 
  1681  081C                     	;# 
  1682  081C                     	;# 
  1683  081D                     	;# 
  1684  088C                     	;# 
  1685  088D                     	;# 
  1686  088E                     	;# 
  1687  088F                     	;# 
  1688  088F                     	;# 
  1689  0890                     	;# 
  1690  0891                     	;# 
  1691  0892                     	;# 
  1692  0893                     	;# 
  1693  0893                     	;# 
  1694  0894                     	;# 
  1695  0895                     	;# 
  1696  0896                     	;# 
  1697  0897                     	;# 
  1698  0897                     	;# 
  1699  0898                     	;# 
  1700  0899                     	;# 
  1701  0D8C                     	;# 
  1702  0D8C                     	;# 
  1703  0D8D                     	;# 
  1704  0D8E                     	;# 
  1705  0D8F                     	;# 
  1706  0D8F                     	;# 
  1707  0D90                     	;# 
  1708  0D91                     	;# 
  1709  0D92                     	;# 
  1710  0D92                     	;# 
  1711  0D93                     	;# 
  1712  0D94                     	;# 
  1713  0D95                     	;# 
  1714  0D95                     	;# 
  1715  0D96                     	;# 
  1716  0D97                     	;# 
  1717  0D98                     	;# 
  1718  0D99                     	;# 
  1719  0D9A                     	;# 
  1720  0D9B                     	;# 
  1721  0D9C                     	;# 
  1722  0D9D                     	;# 
  1723  0D9E                     	;# 
  1724  0D9E                     	;# 
  1725  0D9F                     	;# 
  1726  0DA0                     	;# 
  1727  0DA1                     	;# 
  1728  0DA1                     	;# 
  1729  0DA2                     	;# 
  1730  0DA3                     	;# 
  1731  0DA4                     	;# 
  1732  0DA4                     	;# 
  1733  0DA5                     	;# 
  1734  0DA6                     	;# 
  1735  0DA7                     	;# 
  1736  0DA7                     	;# 
  1737  0DA8                     	;# 
  1738  0DA9                     	;# 
  1739  0DAA                     	;# 
  1740  0DAB                     	;# 
  1741  0DAC                     	;# 
  1742  0DAD                     	;# 
  1743  0DAE                     	;# 
  1744  0DAF                     	;# 
  1745  0E0F                     	;# 
  1746  0E10                     	;# 
  1747  0E11                     	;# 
  1748  0E12                     	;# 
  1749  0E13                     	;# 
  1750  0E14                     	;# 
  1751  0E15                     	;# 
  1752  0E16                     	;# 
  1753  0E17                     	;# 
  1754  0E18                     	;# 
  1755  0E19                     	;# 
  1756  0E1A                     	;# 
  1757  0E1B                     	;# 
  1758  0E1C                     	;# 
  1759  0E1D                     	;# 
  1760  0E1E                     	;# 
  1761  0E1F                     	;# 
  1762  0E20                     	;# 
  1763  0E21                     	;# 
  1764  0E22                     	;# 
  1765  0E23                     	;# 
  1766  0E24                     	;# 
  1767  0E25                     	;# 
  1768  0E26                     	;# 
  1769  0E27                     	;# 
  1770  0E28                     	;# 
  1771  0E29                     	;# 
  1772  0E2A                     	;# 
  1773  0E2B                     	;# 
  1774  0E2C                     	;# 
  1775  0E2D                     	;# 
  1776  0E2E                     	;# 
  1777  0E90                     	;# 
  1778  0E91                     	;# 
  1779  0E92                     	;# 
  1780  0E94                     	;# 
  1781  0E95                     	;# 
  1782  0E9C                     	;# 
  1783  0E9D                     	;# 
  1784  0E9E                     	;# 
  1785  0E9F                     	;# 
  1786  0EA0                     	;# 
  1787  0EA1                     	;# 
  1788  0EA2                     	;# 
  1789  0EA3                     	;# 
  1790  0EA4                     	;# 
  1791  0EA5                     	;# 
  1792  0EA6                     	;# 
  1793  0EA7                     	;# 
  1794  0F0F                     	;# 
  1795  0F10                     	;# 
  1796  0F11                     	;# 
  1797  0F12                     	;# 
  1798  0F13                     	;# 
  1799  0F14                     	;# 
  1800  0F15                     	;# 
  1801  0F16                     	;# 
  1802  0F17                     	;# 
  1803  0F18                     	;# 
  1804  0F19                     	;# 
  1805  0F1A                     	;# 
  1806  0F1B                     	;# 
  1807  0F1C                     	;# 
  1808  0F1D                     	;# 
  1809  0F1E                     	;# 
  1810  0F1F                     	;# 
  1811  0F20                     	;# 
  1812  0F21                     	;# 
  1813  0F22                     	;# 
  1814  0F23                     	;# 
  1815  0F24                     	;# 
  1816  0F25                     	;# 
  1817  0F26                     	;# 
  1818  0F27                     	;# 
  1819  0F28                     	;# 
  1820  0F29                     	;# 
  1821  0F2A                     	;# 
  1822  0F2B                     	;# 
  1823  0F2C                     	;# 
  1824  0F2D                     	;# 
  1825  0F2E                     	;# 
  1826  0F2F                     	;# 
  1827  0F30                     	;# 
  1828  0F31                     	;# 
  1829  0F32                     	;# 
  1830  0F33                     	;# 
  1831  0F34                     	;# 
  1832  0F35                     	;# 
  1833  0F36                     	;# 
  1834  0F37                     	;# 
  1835  0FE4                     	;# 
  1836  0FE5                     	;# 
  1837  0FE6                     	;# 
  1838  0FE7                     	;# 
  1839  0FE8                     	;# 
  1840  0FE9                     	;# 
  1841  0FEA                     	;# 
  1842  0FEB                     	;# 
  1843  0FED                     	;# 
  1844  0FEE                     	;# 
  1845  0FEF                     	;# 
  1846  0000                     	;# 
  1847  0001                     	;# 
  1848  0002                     	;# 
  1849  0003                     	;# 
  1850  0004                     	;# 
  1851  0005                     	;# 
  1852  0006                     	;# 
  1853  0007                     	;# 
  1854  0008                     	;# 
  1855  0009                     	;# 
  1856  000A                     	;# 
  1857  000B                     	;# 
  1858  000C                     	;# 
  1859  000D                     	;# 
  1860  000E                     	;# 
  1861  0010                     	;# 
  1862  0011                     	;# 
  1863  0012                     	;# 
  1864  0013                     	;# 
  1865  0014                     	;# 
  1866  0015                     	;# 
  1867  0016                     	;# 
  1868  0016                     	;# 
  1869  0017                     	;# 
  1870  0018                     	;# 
  1871  0019                     	;# 
  1872  001A                     	;# 
  1873  001A                     	;# 
  1874  001B                     	;# 
  1875  001B                     	;# 
  1876  001C                     	;# 
  1877  001D                     	;# 
  1878  001E                     	;# 
  1879  001F                     	;# 
  1880  008C                     	;# 
  1881  008D                     	;# 
  1882  008E                     	;# 
  1883  0090                     	;# 
  1884  0091                     	;# 
  1885  0092                     	;# 
  1886  0093                     	;# 
  1887  0094                     	;# 
  1888  0095                     	;# 
  1889  0096                     	;# 
  1890  0098                     	;# 
  1891  0099                     	;# 
  1892  009A                     	;# 
  1893  009B                     	;# 
  1894  009B                     	;# 
  1895  009C                     	;# 
  1896  009D                     	;# 
  1897  009E                     	;# 
  1898  009F                     	;# 
  1899  010C                     	;# 
  1900  010D                     	;# 
  1901  010E                     	;# 
  1902  0111                     	;# 
  1903  0112                     	;# 
  1904  0113                     	;# 
  1905  0114                     	;# 
  1906  0115                     	;# 
  1907  0116                     	;# 
  1908  0117                     	;# 
  1909  0118                     	;# 
  1910  0119                     	;# 
  1911  011C                     	;# 
  1912  018C                     	;# 
  1913  018D                     	;# 
  1914  018E                     	;# 
  1915  0191                     	;# 
  1916  0191                     	;# 
  1917  0192                     	;# 
  1918  0193                     	;# 
  1919  0193                     	;# 
  1920  0194                     	;# 
  1921  0195                     	;# 
  1922  0196                     	;# 
  1923  0199                     	;# 
  1924  0199                     	;# 
  1925  0199                     	;# 
  1926  019A                     	;# 
  1927  019A                     	;# 
  1928  019A                     	;# 
  1929  019B                     	;# 
  1930  019B                     	;# 
  1931  019B                     	;# 
  1932  019B                     	;# 
  1933  019B                     	;# 
  1934  019C                     	;# 
  1935  019C                     	;# 
  1936  019C                     	;# 
  1937  019D                     	;# 
  1938  019D                     	;# 
  1939  019D                     	;# 
  1940  019E                     	;# 
  1941  019E                     	;# 
  1942  019E                     	;# 
  1943  019F                     	;# 
  1944  019F                     	;# 
  1945  019F                     	;# 
  1946  019F                     	;# 
  1947  019F                     	;# 
  1948  020C                     	;# 
  1949  020D                     	;# 
  1950  020E                     	;# 
  1951  0211                     	;# 
  1952  0211                     	;# 
  1953  0212                     	;# 
  1954  0212                     	;# 
  1955  0213                     	;# 
  1956  0213                     	;# 
  1957  0214                     	;# 
  1958  0214                     	;# 
  1959  0215                     	;# 
  1960  0215                     	;# 
  1961  0215                     	;# 
  1962  0215                     	;# 
  1963  0216                     	;# 
  1964  0216                     	;# 
  1965  0217                     	;# 
  1966  0217                     	;# 
  1967  028C                     	;# 
  1968  028D                     	;# 
  1969  028E                     	;# 
  1970  0291                     	;# 
  1971  0291                     	;# 
  1972  0292                     	;# 
  1973  0293                     	;# 
  1974  0294                     	;# 
  1975  0298                     	;# 
  1976  0298                     	;# 
  1977  0299                     	;# 
  1978  029A                     	;# 
  1979  029B                     	;# 
  1980  029E                     	;# 
  1981  030C                     	;# 
  1982  030D                     	;# 
  1983  030E                     	;# 
  1984  038C                     	;# 
  1985  038D                     	;# 
  1986  038E                     	;# 
  1987  0391                     	;# 
  1988  0392                     	;# 
  1989  0393                     	;# 
  1990  0394                     	;# 
  1991  0395                     	;# 
  1992  0396                     	;# 
  1993  0397                     	;# 
  1994  0398                     	;# 
  1995  0399                     	;# 
  1996  040E                     	;# 
  1997  0413                     	;# 
  1998  0413                     	;# 
  1999  0414                     	;# 
  2000  0414                     	;# 
  2001  0415                     	;# 
  2002  0416                     	;# 
  2003  0417                     	;# 
  2004  0418                     	;# 
  2005  041A                     	;# 
  2006  041A                     	;# 
  2007  041B                     	;# 
  2008  041B                     	;# 
  2009  041C                     	;# 
  2010  041D                     	;# 
  2011  041E                     	;# 
  2012  041F                     	;# 
  2013  0493                     	;# 
  2014  0493                     	;# 
  2015  0494                     	;# 
  2016  0495                     	;# 
  2017  0496                     	;# 
  2018  049A                     	;# 
  2019  049B                     	;# 
  2020  049C                     	;# 
  2021  049D                     	;# 
  2022  058C                     	;# 
  2023  058C                     	;# 
  2024  058D                     	;# 
  2025  058E                     	;# 
  2026  058E                     	;# 
  2027  058F                     	;# 
  2028  0590                     	;# 
  2029  0590                     	;# 
  2030  0591                     	;# 
  2031  0592                     	;# 
  2032  0592                     	;# 
  2033  0593                     	;# 
  2034  0594                     	;# 
  2035  0594                     	;# 
  2036  0595                     	;# 
  2037  0596                     	;# 
  2038  0596                     	;# 
  2039  0597                     	;# 
  2040  0598                     	;# 
  2041  0599                     	;# 
  2042  059A                     	;# 
  2043  059B                     	;# 
  2044  059B                     	;# 
  2045  059C                     	;# 
  2046  059D                     	;# 
  2047  060C                     	;# 
  2048  060C                     	;# 
  2049  060D                     	;# 
  2050  060E                     	;# 
  2051  060F                     	;# 
  2052  060F                     	;# 
  2053  0610                     	;# 
  2054  0611                     	;# 
  2055  0612                     	;# 
  2056  0613                     	;# 
  2057  0614                     	;# 
  2058  0617                     	;# 
  2059  0617                     	;# 
  2060  0618                     	;# 
  2061  0619                     	;# 
  2062  061A                     	;# 
  2063  061A                     	;# 
  2064  061B                     	;# 
  2065  061C                     	;# 
  2066  0691                     	;# 
  2067  0692                     	;# 
  2068  0693                     	;# 
  2069  0694                     	;# 
  2070  0695                     	;# 
  2071  0696                     	;# 
  2072  0697                     	;# 
  2073  0699                     	;# 
  2074  069A                     	;# 
  2075  0711                     	;# 
  2076  0712                     	;# 
  2077  0713                     	;# 
  2078  0714                     	;# 
  2079  0715                     	;# 
  2080  0718                     	;# 
  2081  0718                     	;# 
  2082  0719                     	;# 
  2083  071A                     	;# 
  2084  071A                     	;# 
  2085  071B                     	;# 
  2086  071C                     	;# 
  2087  071D                     	;# 
  2088  0791                     	;# 
  2089  0791                     	;# 
  2090  0792                     	;# 
  2091  0793                     	;# 
  2092  0793                     	;# 
  2093  0794                     	;# 
  2094  0795                     	;# 
  2095  0795                     	;# 
  2096  0796                     	;# 
  2097  0797                     	;# 
  2098  0797                     	;# 
  2099  0798                     	;# 
  2100  0799                     	;# 
  2101  079A                     	;# 
  2102  080C                     	;# 
  2103  080C                     	;# 
  2104  080D                     	;# 
  2105  080E                     	;# 
  2106  080E                     	;# 
  2107  080F                     	;# 
  2108  0810                     	;# 
  2109  0810                     	;# 
  2110  0811                     	;# 
  2111  0812                     	;# 
  2112  0812                     	;# 
  2113  0813                     	;# 
  2114  0814                     	;# 
  2115  0815                     	;# 
  2116  0816                     	;# 
  2117  0817                     	;# 
  2118  0818                     	;# 
  2119  0819                     	;# 
  2120  081A                     	;# 
  2121  081A                     	;# 
  2122  081B                     	;# 
  2123  081C                     	;# 
  2124  081C                     	;# 
  2125  081D                     	;# 
  2126  088C                     	;# 
  2127  088D                     	;# 
  2128  088E                     	;# 
  2129  088F                     	;# 
  2130  088F                     	;# 
  2131  0890                     	;# 
  2132  0891                     	;# 
  2133  0892                     	;# 
  2134  0893                     	;# 
  2135  0893                     	;# 
  2136  0894                     	;# 
  2137  0895                     	;# 
  2138  0896                     	;# 
  2139  0897                     	;# 
  2140  0897                     	;# 
  2141  0898                     	;# 
  2142  0899                     	;# 
  2143  0D8C                     	;# 
  2144  0D8C                     	;# 
  2145  0D8D                     	;# 
  2146  0D8E                     	;# 
  2147  0D8F                     	;# 
  2148  0D8F                     	;# 
  2149  0D90                     	;# 
  2150  0D91                     	;# 
  2151  0D92                     	;# 
  2152  0D92                     	;# 
  2153  0D93                     	;# 
  2154  0D94                     	;# 
  2155  0D95                     	;# 
  2156  0D95                     	;# 
  2157  0D96                     	;# 
  2158  0D97                     	;# 
  2159  0D98                     	;# 
  2160  0D99                     	;# 
  2161  0D9A                     	;# 
  2162  0D9B                     	;# 
  2163  0D9C                     	;# 
  2164  0D9D                     	;# 
  2165  0D9E                     	;# 
  2166  0D9E                     	;# 
  2167  0D9F                     	;# 
  2168  0DA0                     	;# 
  2169  0DA1                     	;# 
  2170  0DA1                     	;# 
  2171  0DA2                     	;# 
  2172  0DA3                     	;# 
  2173  0DA4                     	;# 
  2174  0DA4                     	;# 
  2175  0DA5                     	;# 
  2176  0DA6                     	;# 
  2177  0DA7                     	;# 
  2178  0DA7                     	;# 
  2179  0DA8                     	;# 
  2180  0DA9                     	;# 
  2181  0DAA                     	;# 
  2182  0DAB                     	;# 
  2183  0DAC                     	;# 
  2184  0DAD                     	;# 
  2185  0DAE                     	;# 
  2186  0DAF                     	;# 
  2187  0E0F                     	;# 
  2188  0E10                     	;# 
  2189  0E11                     	;# 
  2190  0E12                     	;# 
  2191  0E13                     	;# 
  2192  0E14                     	;# 
  2193  0E15                     	;# 
  2194  0E16                     	;# 
  2195  0E17                     	;# 
  2196  0E18                     	;# 
  2197  0E19                     	;# 
  2198  0E1A                     	;# 
  2199  0E1B                     	;# 
  2200  0E1C                     	;# 
  2201  0E1D                     	;# 
  2202  0E1E                     	;# 
  2203  0E1F                     	;# 
  2204  0E20                     	;# 
  2205  0E21                     	;# 
  2206  0E22                     	;# 
  2207  0E23                     	;# 
  2208  0E24                     	;# 
  2209  0E25                     	;# 
  2210  0E26                     	;# 
  2211  0E27                     	;# 
  2212  0E28                     	;# 
  2213  0E29                     	;# 
  2214  0E2A                     	;# 
  2215  0E2B                     	;# 
  2216  0E2C                     	;# 
  2217  0E2D                     	;# 
  2218  0E2E                     	;# 
  2219  0E90                     	;# 
  2220  0E91                     	;# 
  2221  0E92                     	;# 
  2222  0E94                     	;# 
  2223  0E95                     	;# 
  2224  0E9C                     	;# 
  2225  0E9D                     	;# 
  2226  0E9E                     	;# 
  2227  0E9F                     	;# 
  2228  0EA0                     	;# 
  2229  0EA1                     	;# 
  2230  0EA2                     	;# 
  2231  0EA3                     	;# 
  2232  0EA4                     	;# 
  2233  0EA5                     	;# 
  2234  0EA6                     	;# 
  2235  0EA7                     	;# 
  2236  0F0F                     	;# 
  2237  0F10                     	;# 
  2238  0F11                     	;# 
  2239  0F12                     	;# 
  2240  0F13                     	;# 
  2241  0F14                     	;# 
  2242  0F15                     	;# 
  2243  0F16                     	;# 
  2244  0F17                     	;# 
  2245  0F18                     	;# 
  2246  0F19                     	;# 
  2247  0F1A                     	;# 
  2248  0F1B                     	;# 
  2249  0F1C                     	;# 
  2250  0F1D                     	;# 
  2251  0F1E                     	;# 
  2252  0F1F                     	;# 
  2253  0F20                     	;# 
  2254  0F21                     	;# 
  2255  0F22                     	;# 
  2256  0F23                     	;# 
  2257  0F24                     	;# 
  2258  0F25                     	;# 
  2259  0F26                     	;# 
  2260  0F27                     	;# 
  2261  0F28                     	;# 
  2262  0F29                     	;# 
  2263  0F2A                     	;# 
  2264  0F2B                     	;# 
  2265  0F2C                     	;# 
  2266  0F2D                     	;# 
  2267  0F2E                     	;# 
  2268  0F2F                     	;# 
  2269  0F30                     	;# 
  2270  0F31                     	;# 
  2271  0F32                     	;# 
  2272  0F33                     	;# 
  2273  0F34                     	;# 
  2274  0F35                     	;# 
  2275  0F36                     	;# 
  2276  0F37                     	;# 
  2277  0FE4                     	;# 
  2278  0FE5                     	;# 
  2279  0FE6                     	;# 
  2280  0FE7                     	;# 
  2281  0FE8                     	;# 
  2282  0FE9                     	;# 
  2283  0FEA                     	;# 
  2284  0FEB                     	;# 
  2285  0FED                     	;# 
  2286  0FEE                     	;# 
  2287  0FEF                     	;# 
  2288  0000                     	;# 
  2289  0001                     	;# 
  2290  0002                     	;# 
  2291  0003                     	;# 
  2292  0004                     	;# 
  2293  0005                     	;# 
  2294  0006                     	;# 
  2295  0007                     	;# 
  2296  0008                     	;# 
  2297  0009                     	;# 
  2298  000A                     	;# 
  2299  000B                     	;# 
  2300  000C                     	;# 
  2301  000D                     	;# 
  2302  000E                     	;# 
  2303  0010                     	;# 
  2304  0011                     	;# 
  2305  0012                     	;# 
  2306  0013                     	;# 
  2307  0014                     	;# 
  2308  0015                     	;# 
  2309  0016                     	;# 
  2310  0016                     	;# 
  2311  0017                     	;# 
  2312  0018                     	;# 
  2313  0019                     	;# 
  2314  001A                     	;# 
  2315  001A                     	;# 
  2316  001B                     	;# 
  2317  001B                     	;# 
  2318  001C                     	;# 
  2319  001D                     	;# 
  2320  001E                     	;# 
  2321  001F                     	;# 
  2322  008C                     	;# 
  2323  008D                     	;# 
  2324  008E                     	;# 
  2325  0090                     	;# 
  2326  0091                     	;# 
  2327  0092                     	;# 
  2328  0093                     	;# 
  2329  0094                     	;# 
  2330  0095                     	;# 
  2331  0096                     	;# 
  2332  0098                     	;# 
  2333  0099                     	;# 
  2334  009A                     	;# 
  2335  009B                     	;# 
  2336  009B                     	;# 
  2337  009C                     	;# 
  2338  009D                     	;# 
  2339  009E                     	;# 
  2340  009F                     	;# 
  2341  010C                     	;# 
  2342  010D                     	;# 
  2343  010E                     	;# 
  2344  0111                     	;# 
  2345  0112                     	;# 
  2346  0113                     	;# 
  2347  0114                     	;# 
  2348  0115                     	;# 
  2349  0116                     	;# 
  2350  0117                     	;# 
  2351  0118                     	;# 
  2352  0119                     	;# 
  2353  011C                     	;# 
  2354  018C                     	;# 
  2355  018D                     	;# 
  2356  018E                     	;# 
  2357  0191                     	;# 
  2358  0191                     	;# 
  2359  0192                     	;# 
  2360  0193                     	;# 
  2361  0193                     	;# 
  2362  0194                     	;# 
  2363  0195                     	;# 
  2364  0196                     	;# 
  2365  0199                     	;# 
  2366  0199                     	;# 
  2367  0199                     	;# 
  2368  019A                     	;# 
  2369  019A                     	;# 
  2370  019A                     	;# 
  2371  019B                     	;# 
  2372  019B                     	;# 
  2373  019B                     	;# 
  2374  019B                     	;# 
  2375  019B                     	;# 
  2376  019C                     	;# 
  2377  019C                     	;# 
  2378  019C                     	;# 
  2379  019D                     	;# 
  2380  019D                     	;# 
  2381  019D                     	;# 
  2382  019E                     	;# 
  2383  019E                     	;# 
  2384  019E                     	;# 
  2385  019F                     	;# 
  2386  019F                     	;# 
  2387  019F                     	;# 
  2388  019F                     	;# 
  2389  019F                     	;# 
  2390  020C                     	;# 
  2391  020D                     	;# 
  2392  020E                     	;# 
  2393  0211                     	;# 
  2394  0211                     	;# 
  2395  0212                     	;# 
  2396  0212                     	;# 
  2397  0213                     	;# 
  2398  0213                     	;# 
  2399  0214                     	;# 
  2400  0214                     	;# 
  2401  0215                     	;# 
  2402  0215                     	;# 
  2403  0215                     	;# 
  2404  0215                     	;# 
  2405  0216                     	;# 
  2406  0216                     	;# 
  2407  0217                     	;# 
  2408  0217                     	;# 
  2409  028C                     	;# 
  2410  028D                     	;# 
  2411  028E                     	;# 
  2412  0291                     	;# 
  2413  0291                     	;# 
  2414  0292                     	;# 
  2415  0293                     	;# 
  2416  0294                     	;# 
  2417  0298                     	;# 
  2418  0298                     	;# 
  2419  0299                     	;# 
  2420  029A                     	;# 
  2421  029B                     	;# 
  2422  029E                     	;# 
  2423  030C                     	;# 
  2424  030D                     	;# 
  2425  030E                     	;# 
  2426  038C                     	;# 
  2427  038D                     	;# 
  2428  038E                     	;# 
  2429  0391                     	;# 
  2430  0392                     	;# 
  2431  0393                     	;# 
  2432  0394                     	;# 
  2433  0395                     	;# 
  2434  0396                     	;# 
  2435  0397                     	;# 
  2436  0398                     	;# 
  2437  0399                     	;# 
  2438  040E                     	;# 
  2439  0413                     	;# 
  2440  0413                     	;# 
  2441  0414                     	;# 
  2442  0414                     	;# 
  2443  0415                     	;# 
  2444  0416                     	;# 
  2445  0417                     	;# 
  2446  0418                     	;# 
  2447  041A                     	;# 
  2448  041A                     	;# 
  2449  041B                     	;# 
  2450  041B                     	;# 
  2451  041C                     	;# 
  2452  041D                     	;# 
  2453  041E                     	;# 
  2454  041F                     	;# 
  2455  0493                     	;# 
  2456  0493                     	;# 
  2457  0494                     	;# 
  2458  0495                     	;# 
  2459  0496                     	;# 
  2460  049A                     	;# 
  2461  049B                     	;# 
  2462  049C                     	;# 
  2463  049D                     	;# 
  2464  058C                     	;# 
  2465  058C                     	;# 
  2466  058D                     	;# 
  2467  058E                     	;# 
  2468  058E                     	;# 
  2469  058F                     	;# 
  2470  0590                     	;# 
  2471  0590                     	;# 
  2472  0591                     	;# 
  2473  0592                     	;# 
  2474  0592                     	;# 
  2475  0593                     	;# 
  2476  0594                     	;# 
  2477  0594                     	;# 
  2478  0595                     	;# 
  2479  0596                     	;# 
  2480  0596                     	;# 
  2481  0597                     	;# 
  2482  0598                     	;# 
  2483  0599                     	;# 
  2484  059A                     	;# 
  2485  059B                     	;# 
  2486  059B                     	;# 
  2487  059C                     	;# 
  2488  059D                     	;# 
  2489  060C                     	;# 
  2490  060C                     	;# 
  2491  060D                     	;# 
  2492  060E                     	;# 
  2493  060F                     	;# 
  2494  060F                     	;# 
  2495  0610                     	;# 
  2496  0611                     	;# 
  2497  0612                     	;# 
  2498  0613                     	;# 
  2499  0614                     	;# 
  2500  0617                     	;# 
  2501  0617                     	;# 
  2502  0618                     	;# 
  2503  0619                     	;# 
  2504  061A                     	;# 
  2505  061A                     	;# 
  2506  061B                     	;# 
  2507  061C                     	;# 
  2508  0691                     	;# 
  2509  0692                     	;# 
  2510  0693                     	;# 
  2511  0694                     	;# 
  2512  0695                     	;# 
  2513  0696                     	;# 
  2514  0697                     	;# 
  2515  0699                     	;# 
  2516  069A                     	;# 
  2517  0711                     	;# 
  2518  0712                     	;# 
  2519  0713                     	;# 
  2520  0714                     	;# 
  2521  0715                     	;# 
  2522  0718                     	;# 
  2523  0718                     	;# 
  2524  0719                     	;# 
  2525  071A                     	;# 
  2526  071A                     	;# 
  2527  071B                     	;# 
  2528  071C                     	;# 
  2529  071D                     	;# 
  2530  0791                     	;# 
  2531  0791                     	;# 
  2532  0792                     	;# 
  2533  0793                     	;# 
  2534  0793                     	;# 
  2535  0794                     	;# 
  2536  0795                     	;# 
  2537  0795                     	;# 
  2538  0796                     	;# 
  2539  0797                     	;# 
  2540  0797                     	;# 
  2541  0798                     	;# 
  2542  0799                     	;# 
  2543  079A                     	;# 
  2544  080C                     	;# 
  2545  080C                     	;# 
  2546  080D                     	;# 
  2547  080E                     	;# 
  2548  080E                     	;# 
  2549  080F                     	;# 
  2550  0810                     	;# 
  2551  0810                     	;# 
  2552  0811                     	;# 
  2553  0812                     	;# 
  2554  0812                     	;# 
  2555  0813                     	;# 
  2556  0814                     	;# 
  2557  0815                     	;# 
  2558  0816                     	;# 
  2559  0817                     	;# 
  2560  0818                     	;# 
  2561  0819                     	;# 
  2562  081A                     	;# 
  2563  081A                     	;# 
  2564  081B                     	;# 
  2565  081C                     	;# 
  2566  081C                     	;# 
  2567  081D                     	;# 
  2568  088C                     	;# 
  2569  088D                     	;# 
  2570  088E                     	;# 
  2571  088F                     	;# 
  2572  088F                     	;# 
  2573  0890                     	;# 
  2574  0891                     	;# 
  2575  0892                     	;# 
  2576  0893                     	;# 
  2577  0893                     	;# 
  2578  0894                     	;# 
  2579  0895                     	;# 
  2580  0896                     	;# 
  2581  0897                     	;# 
  2582  0897                     	;# 
  2583  0898                     	;# 
  2584  0899                     	;# 
  2585  0D8C                     	;# 
  2586  0D8C                     	;# 
  2587  0D8D                     	;# 
  2588  0D8E                     	;# 
  2589  0D8F                     	;# 
  2590  0D8F                     	;# 
  2591  0D90                     	;# 
  2592  0D91                     	;# 
  2593  0D92                     	;# 
  2594  0D92                     	;# 
  2595  0D93                     	;# 
  2596  0D94                     	;# 
  2597  0D95                     	;# 
  2598  0D95                     	;# 
  2599  0D96                     	;# 
  2600  0D97                     	;# 
  2601  0D98                     	;# 
  2602  0D99                     	;# 
  2603  0D9A                     	;# 
  2604  0D9B                     	;# 
  2605  0D9C                     	;# 
  2606  0D9D                     	;# 
  2607  0D9E                     	;# 
  2608  0D9E                     	;# 
  2609  0D9F                     	;# 
  2610  0DA0                     	;# 
  2611  0DA1                     	;# 
  2612  0DA1                     	;# 
  2613  0DA2                     	;# 
  2614  0DA3                     	;# 
  2615  0DA4                     	;# 
  2616  0DA4                     	;# 
  2617  0DA5                     	;# 
  2618  0DA6                     	;# 
  2619  0DA7                     	;# 
  2620  0DA7                     	;# 
  2621  0DA8                     	;# 
  2622  0DA9                     	;# 
  2623  0DAA                     	;# 
  2624  0DAB                     	;# 
  2625  0DAC                     	;# 
  2626  0DAD                     	;# 
  2627  0DAE                     	;# 
  2628  0DAF                     	;# 
  2629  0E0F                     	;# 
  2630  0E10                     	;# 
  2631  0E11                     	;# 
  2632  0E12                     	;# 
  2633  0E13                     	;# 
  2634  0E14                     	;# 
  2635  0E15                     	;# 
  2636  0E16                     	;# 
  2637  0E17                     	;# 
  2638  0E18                     	;# 
  2639  0E19                     	;# 
  2640  0E1A                     	;# 
  2641  0E1B                     	;# 
  2642  0E1C                     	;# 
  2643  0E1D                     	;# 
  2644  0E1E                     	;# 
  2645  0E1F                     	;# 
  2646  0E20                     	;# 
  2647  0E21                     	;# 
  2648  0E22                     	;# 
  2649  0E23                     	;# 
  2650  0E24                     	;# 
  2651  0E25                     	;# 
  2652  0E26                     	;# 
  2653  0E27                     	;# 
  2654  0E28                     	;# 
  2655  0E29                     	;# 
  2656  0E2A                     	;# 
  2657  0E2B                     	;# 
  2658  0E2C                     	;# 
  2659  0E2D                     	;# 
  2660  0E2E                     	;# 
  2661  0E90                     	;# 
  2662  0E91                     	;# 
  2663  0E92                     	;# 
  2664  0E94                     	;# 
  2665  0E95                     	;# 
  2666  0E9C                     	;# 
  2667  0E9D                     	;# 
  2668  0E9E                     	;# 
  2669  0E9F                     	;# 
  2670  0EA0                     	;# 
  2671  0EA1                     	;# 
  2672  0EA2                     	;# 
  2673  0EA3                     	;# 
  2674  0EA4                     	;# 
  2675  0EA5                     	;# 
  2676  0EA6                     	;# 
  2677  0EA7                     	;# 
  2678  0F0F                     	;# 
  2679  0F10                     	;# 
  2680  0F11                     	;# 
  2681  0F12                     	;# 
  2682  0F13                     	;# 
  2683  0F14                     	;# 
  2684  0F15                     	;# 
  2685  0F16                     	;# 
  2686  0F17                     	;# 
  2687  0F18                     	;# 
  2688  0F19                     	;# 
  2689  0F1A                     	;# 
  2690  0F1B                     	;# 
  2691  0F1C                     	;# 
  2692  0F1D                     	;# 
  2693  0F1E                     	;# 
  2694  0F1F                     	;# 
  2695  0F20                     	;# 
  2696  0F21                     	;# 
  2697  0F22                     	;# 
  2698  0F23                     	;# 
  2699  0F24                     	;# 
  2700  0F25                     	;# 
  2701  0F26                     	;# 
  2702  0F27                     	;# 
  2703  0F28                     	;# 
  2704  0F29                     	;# 
  2705  0F2A                     	;# 
  2706  0F2B                     	;# 
  2707  0F2C                     	;# 
  2708  0F2D                     	;# 
  2709  0F2E                     	;# 
  2710  0F2F                     	;# 
  2711  0F30                     	;# 
  2712  0F31                     	;# 
  2713  0F32                     	;# 
  2714  0F33                     	;# 
  2715  0F34                     	;# 
  2716  0F35                     	;# 
  2717  0F36                     	;# 
  2718  0F37                     	;# 
  2719  0FE4                     	;# 
  2720  0FE5                     	;# 
  2721  0FE6                     	;# 
  2722  0FE7                     	;# 
  2723  0FE8                     	;# 
  2724  0FE9                     	;# 
  2725  0FEA                     	;# 
  2726  0FEB                     	;# 
  2727  0FED                     	;# 
  2728  0FEE                     	;# 
  2729  0FEF                     	;# 
  2730                           
  2731                           	psect	idataBANK0
  2732  0297                     __pidataBANK0:
  2733                           
  2734                           ;initializer for _dollar_sign
  2735  0297  34A3               	retlw	low (STR_2| (0+32768))
  2736  0298  3482               	retlw	high (STR_2| (0+32768))
  2737                           
  2738                           ;initializer for _anchor
  2739  0299  345F               	retlw	low (STR_1| (0+32768))
  2740  029A  3482               	retlw	high (STR_1| (0+32768))
  2741                           
  2742                           	psect	nvBANK0
  2743  004D                     __pnvBANK0:
  2744  004D                     _EUSART_ErrorHandler:
  2745  004D                     	ds	2
  2746  004F                     _EUSART_OverrunErrorHandler:
  2747  004F                     	ds	2
  2748  0051                     _EUSART_FramingErrorHandler:
  2749  0051                     	ds	2
  2750  0053                     _EUSART_RxDefaultInterruptHandler:
  2751  0053                     	ds	2
  2752  0055                     _EUSART_TxDefaultInterruptHandler:
  2753  0055                     	ds	2
  2754  0057                     _match_code:
  2755  0057                     	ds	1
  2756  0058                     _toggle:
  2757  0058                     	ds	1
  2758  0059                     _grab_flag:
  2759  0059                     	ds	1
  2760  005A                     _timer0ReloadVal:
  2761  005A                     	ds	1
  2762  005B                     _eusartTxBufferRemaining:
  2763  005B                     	ds	1
  2764  0010                     _PIR1bits	set	16
  2765  000B                     _INTCONbits	set	11
  2766  0015                     _TMR0	set	21
  2767  0073                     _RC3	set	115
  2768  0077                     _RC7	set	119
  2769  006F                     _RB7	set	111
  2770  0076                     _RC6	set	118
  2771  006E                     _RB6	set	110
  2772  0095                     _OPTION_REG	set	149
  2773  0098                     _OSCTUNE	set	152
  2774  0099                     _OSCCON	set	153
  2775  0095                     _OPTION_REGbits	set	149
  2776  008E                     _TRISC	set	142
  2777  008D                     _TRISB	set	141
  2778  008C                     _TRISA	set	140
  2779  0090                     _PIE1bits	set	144
  2780  0116                     _BORCON	set	278
  2781  010E                     _LATC	set	270
  2782  010D                     _LATB	set	269
  2783  010C                     _LATA	set	268
  2784  018C                     _ANSELA	set	396
  2785  018D                     _ANSELB	set	397
  2786  018E                     _ANSELC	set	398
  2787  0199                     _RC1REG	set	409
  2788  019D                     _RC1STAbits	set	413
  2789  019A                     _TX1REG	set	410
  2790  019E                     _TX1STAbits	set	414
  2791  019C                     _SPBRGH	set	412
  2792  019B                     _SPBRGL	set	411
  2793  019E                     _TX1STA	set	414
  2794  019D                     _RC1STA	set	413
  2795  019F                     _BAUD1CON	set	415
  2796  020E                     _WPUC	set	526
  2797  020C                     _WPUA	set	524
  2798  020D                     _WPUB	set	525
  2799  028E                     _ODCONC	set	654
  2800  028D                     _ODCONB	set	653
  2801  028C                     _ODCONA	set	652
  2802  030E                     _SLRCONC	set	782
  2803  030D                     _SLRCONB	set	781
  2804  030C                     _SLRCONA	set	780
  2805  038E                     _INLVLC	set	910
  2806  038D                     _INLVLB	set	909
  2807  038C                     _INLVLA	set	908
  2808  0E24                     _RXPPS	set	3620
  2809  0E9F                     _RB7PPS	set	3743
  2810                           
  2811                           	psect	stringtext1
  2812  025F                     __pstringtext1:
  2813  025F                     STR_1:
  2814  025F  3447               	retlw	71	;'G'
  2815  0260  3450               	retlw	80	;'P'
  2816  0261  3447               	retlw	71	;'G'
  2817  0262  3447               	retlw	71	;'G'
  2818  0263  3441               	retlw	65	;'A'
  2819  0264  342C               	retlw	44	;','
  2820  0265  3420               	retlw	32	;' '
  2821  0266  3400               	retlw	0
  2822                           
  2823                           	psect	stringtext2
  2824  02A3                     __pstringtext2:
  2825  02A3                     STR_2:
  2826  02A3  3424               	retlw	36	;'$'
  2827  02A4  3400               	retlw	0
  2828                           
  2829                           	psect	stringtext3
  2830  0000                     __pstringtext3:
  2831                           
  2832                           	psect	cinit
  2833  003A                     start_initialization:	
  2834                           ; #config settings
  2835                           
  2836  003A                     __initialization:
  2837                           
  2838                           ; Initialize objects allocated to BANK0
  2839  003A  3182  2297  3180   	fcall	__pidataBANK0	;fetch initializer
  2840  003D  00DC               	movwf	__pdataBANK0& (0+127)
  2841  003E  3182  2298  3180   	fcall	__pidataBANK0+1	;fetch initializer
  2842  0041  00DD               	movwf	(__pdataBANK0+1)& (0+127)
  2843  0042  3182  2299  3180   	fcall	__pidataBANK0+2	;fetch initializer
  2844  0045  00DE               	movwf	(__pdataBANK0+2)& (0+127)
  2845  0046  3182  229A  3180   	fcall	__pidataBANK0+3	;fetch initializer
  2846  0049  00DF               	movwf	(__pdataBANK0+3)& (0+127)
  2847                           
  2848                           ; Clear objects allocated to COMMON
  2849  004A  01FB               	clrf	__pbssCOMMON& (0+127)
  2850  004B  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  2851                           
  2852                           ; Clear objects allocated to BANK0
  2853  004C  3020               	movlw	low __pbssBANK0
  2854  004D  0084               	movwf	4
  2855  004E  3000               	movlw	high __pbssBANK0
  2856  004F  0085               	movwf	5
  2857  0050  302D               	movlw	45
  2858  0051  3182  226E  3180   	fcall	clear_ram0
  2859  0054                     end_of_initialization:	
  2860                           ;End of C runtime variable initialization code
  2861                           
  2862  0054                     __end_of__initialization:
  2863  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2864  0055  0020               	movlb	0
  2865  0056  3180  2858         	ljmp	_main	;jump to C main() function
  2866                           
  2867                           	psect	bssCOMMON
  2868  007B                     __pbssCOMMON:
  2869  007B                     _eusartRxTail:
  2870  007B                     	ds	1
  2871  007C                     _eusartRxHead:
  2872  007C                     	ds	1
  2873                           
  2874                           	psect	bssBANK0
  2875  0020                     __pbssBANK0:
  2876  0020                     _buf:
  2877  0020                     	ds	10
  2878  002A                     _eusartRxStatusBuffer:
  2879  002A                     	ds	8
  2880  0032                     _eusartRxBuffer:
  2881  0032                     	ds	8
  2882  003A                     _eusartTxBuffer:
  2883  003A                     	ds	8
  2884  0042                     _ctr:
  2885  0042                     	ds	2
  2886  0044                     _TMR0_InterruptHandler:
  2887  0044                     	ds	2
  2888  0046                     _prev_rxData:
  2889  0046                     	ds	1
  2890  0047                     _rxData:
  2891  0047                     	ds	1
  2892  0048                     _flag_tmr0:
  2893  0048                     	ds	1
  2894  0049                     _eusartRxLastError:
  2895  0049                     	ds	1
  2896  004A                     _eusartRxCount:
  2897  004A                     	ds	1
  2898  004B                     _eusartTxTail:
  2899  004B                     	ds	1
  2900  004C                     _eusartTxHead:
  2901  004C                     	ds	1
  2902                           
  2903                           	psect	dataBANK0
  2904  005C                     __pdataBANK0:
  2905  005C                     _dollar_sign:
  2906  005C                     	ds	2
  2907  005E                     _anchor:
  2908  005E                     	ds	2
  2909                           
  2910                           	psect	clrtext
  2911  026E                     clear_ram0:	
  2912                           ;	Called with FSR0 containing the base address, and
  2913                           ;	WREG with the size to clear
  2914                           
  2915  026E  0064               	clrwdt	;clear the watchdog before getting into this loop
  2916  026F                     clrloop0:
  2917  026F  0180               	clrf	0	;clear RAM location pointed to by FSR
  2918  0270  3101               	addfsr 0,1
  2919  0271  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2920  0272  2A6F               	goto	clrloop0	;have we reached the end yet?
  2921  0273  3400               	retlw	0	;all done for this memory range, return
  2922                           
  2923                           	psect	cstackCOMMON
  2924  0070                     __pcstackCOMMON:
  2925  0070                     ?_EUSART_Receive_ISR:
  2926  0070                     ?_EUSART_Transmit_ISR:	
  2927                           ; 1 bytes @ 0x0
  2928                           
  2929  0070                     ??_EUSART_Transmit_ISR:	
  2930                           ; 1 bytes @ 0x0
  2931                           
  2932  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2933                           ; 1 bytes @ 0x0
  2934                           
  2935  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2936                           ; 1 bytes @ 0x0
  2937                           
  2938  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2939                           ; 1 bytes @ 0x0
  2940                           
  2941  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2942                           ; 1 bytes @ 0x0
  2943                           
  2944  0070                     ?_EUSART_DefaultErrorHandler:	
  2945                           ; 1 bytes @ 0x0
  2946                           
  2947  0070                     ?_EUSART_RxDataHandler:	
  2948                           ; 1 bytes @ 0x0
  2949                           
  2950  0070                     ??_EUSART_RxDataHandler:	
  2951                           ; 1 bytes @ 0x0
  2952                           
  2953  0070                     ?_OSCILLATOR_Initialize:	
  2954                           ; 1 bytes @ 0x0
  2955                           
  2956  0070                     ?_TMR0_Initialize:	
  2957                           ; 1 bytes @ 0x0
  2958                           
  2959  0070                     ?_getnext:	
  2960                           ; 1 bytes @ 0x0
  2961                           
  2962  0070                     ?_EUSART_Initialize:	
  2963                           ; 1 bytes @ 0x0
  2964                           
  2965  0070                     ?_EUSART_is_rx_ready:	
  2966                           ; 1 bytes @ 0x0
  2967                           
  2968  0070                     ?_EUSART_Read:	
  2969                           ; 1 bytes @ 0x0
  2970                           
  2971  0070                     ?_PIN_MANAGER_Initialize:	
  2972                           ; 1 bytes @ 0x0
  2973                           
  2974  0070                     ?_SYSTEM_Initialize:	
  2975                           ; 1 bytes @ 0x0
  2976                           
  2977  0070                     ?_TMR0_ISR:	
  2978                           ; 1 bytes @ 0x0
  2979                           
  2980  0070                     ??_TMR0_ISR:	
  2981                           ; 1 bytes @ 0x0
  2982                           
  2983  0070                     ?_INTERRUPT_InterruptManager:	
  2984                           ; 1 bytes @ 0x0
  2985                           
  2986  0070                     ?_parse:	
  2987                           ; 1 bytes @ 0x0
  2988                           
  2989  0070                     ?_grab:	
  2990                           ; 1 bytes @ 0x0
  2991                           
  2992  0070                     ?_main:	
  2993                           ; 1 bytes @ 0x0
  2994                           
  2995                           
  2996                           ; 1 bytes @ 0x0
  2997  0070                     	ds	1
  2998  0071                     ?_EUSART_SetRxInterruptHandler:
  2999  0071                     ??_EUSART_Receive_ISR:	
  3000                           ; 1 bytes @ 0x1
  3001                           
  3002  0071                     ?_EUSART_SetTxInterruptHandler:	
  3003                           ; 1 bytes @ 0x1
  3004                           
  3005  0071                     ?_EUSART_SetFramingErrorHandler:	
  3006                           ; 1 bytes @ 0x1
  3007                           
  3008  0071                     ?_EUSART_SetOverrunErrorHandler:	
  3009                           ; 1 bytes @ 0x1
  3010                           
  3011  0071                     ?_EUSART_SetErrorHandler:	
  3012                           ; 1 bytes @ 0x1
  3013                           
  3014  0071                     ??_EUSART_DefaultErrorHandler:	
  3015                           ; 1 bytes @ 0x1
  3016                           
  3017  0071                     ??_OSCILLATOR_Initialize:	
  3018                           ; 1 bytes @ 0x1
  3019                           
  3020  0071                     ??_TMR0_Initialize:	
  3021                           ; 1 bytes @ 0x1
  3022                           
  3023  0071                     ??_EUSART_is_rx_ready:	
  3024                           ; 1 bytes @ 0x1
  3025                           
  3026  0071                     ??_EUSART_Read:	
  3027                           ; 1 bytes @ 0x1
  3028                           
  3029  0071                     ??_PIN_MANAGER_Initialize:	
  3030                           ; 1 bytes @ 0x1
  3031                           
  3032  0071                     ??_INTERRUPT_InterruptManager:	
  3033                           ; 1 bytes @ 0x1
  3034                           
  3035  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3036                           ; 1 bytes @ 0x1
  3037                           
  3038  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3039                           ; 2 bytes @ 0x1
  3040                           
  3041  0071                     EUSART_SetErrorHandler@interruptHandler:	
  3042                           ; 2 bytes @ 0x1
  3043                           
  3044  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3045                           ; 2 bytes @ 0x1
  3046                           
  3047  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3048                           ; 2 bytes @ 0x1
  3049                           
  3050                           
  3051                           ; 2 bytes @ 0x1
  3052  0071                     	ds	1
  3053  0072                     EUSART_Read@readValue:
  3054                           
  3055                           ; 1 bytes @ 0x2
  3056  0072                     	ds	1
  3057  0073                     ??_EUSART_SetRxInterruptHandler:
  3058  0073                     ??_EUSART_SetTxInterruptHandler:	
  3059                           ; 1 bytes @ 0x3
  3060                           
  3061  0073                     ??_EUSART_SetFramingErrorHandler:	
  3062                           ; 1 bytes @ 0x3
  3063                           
  3064  0073                     ??_EUSART_SetOverrunErrorHandler:	
  3065                           ; 1 bytes @ 0x3
  3066                           
  3067  0073                     ??_EUSART_SetErrorHandler:	
  3068                           ; 1 bytes @ 0x3
  3069                           
  3070  0073                     ??_getnext:	
  3071                           ; 1 bytes @ 0x3
  3072                           
  3073  0073                     ??_EUSART_Initialize:	
  3074                           ; 1 bytes @ 0x3
  3075                           
  3076                           
  3077                           ; 1 bytes @ 0x3
  3078  0073                     	ds	1
  3079  0074                     ??_SYSTEM_Initialize:
  3080  0074                     ??_parse:	
  3081                           ; 1 bytes @ 0x4
  3082                           
  3083  0074                     ?_match:	
  3084                           ; 1 bytes @ 0x4
  3085                           
  3086  0074                     ??_grab:	
  3087                           ; 1 bytes @ 0x4
  3088                           
  3089  0074                     match@strg:	
  3090                           ; 1 bytes @ 0x4
  3091                           
  3092                           
  3093                           ; 2 bytes @ 0x4
  3094  0074                     	ds	1
  3095  0075                     parse@c:
  3096  0075                     grab@i:	
  3097                           ; 1 bytes @ 0x5
  3098                           
  3099                           
  3100                           ; 1 bytes @ 0x5
  3101  0075                     	ds	1
  3102  0076                     parse@i:
  3103  0076                     match@length:	
  3104                           ; 1 bytes @ 0x6
  3105                           
  3106                           
  3107                           ; 1 bytes @ 0x6
  3108  0076                     	ds	1
  3109  0077                     ??_match:
  3110                           
  3111                           ; 1 bytes @ 0x7
  3112  0077                     	ds	2
  3113  0079                     ??_main:
  3114                           
  3115                           ; 1 bytes @ 0x9
  3116  0079                     	ds	2
  3117                           
  3118                           	psect	cstackBANK0
  3119  0060                     __pcstackBANK0:
  3120  0060                     match@next:
  3121                           
  3122                           ; 1 bytes @ 0x0
  3123  0060                     	ds	1
  3124  0061                     match@flag:
  3125                           
  3126                           ; 1 bytes @ 0x1
  3127  0061                     	ds	1
  3128  0062                     match@retcode:
  3129                           
  3130                           ; 1 bytes @ 0x2
  3131  0062                     	ds	1
  3132                           
  3133                           	psect	maintext
  3134  0058                     __pmaintext:	
  3135 ;;
  3136 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3137 ;;
  3138 ;; *************** function _main *****************
  3139 ;; Defined at:
  3140 ;;		line 119 in file "main.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : B1F/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3157 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3158 ;;Total ram usage:        2 bytes
  3159 ;; Hardware stack levels required when called: 7
  3160 ;; This function calls:
  3161 ;;		_EUSART_Initialize
  3162 ;;		_SYSTEM_Initialize
  3163 ;;		_grab
  3164 ;;		_match
  3165 ;;		_parse
  3166 ;; This function is called by:
  3167 ;;		Startup code after reset
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function _main
  3173  0058                     _main:
  3174  0058                     l1644:	
  3175                           ;incstack = 0
  3176                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3177                           
  3178                           
  3179                           ;main.c: 122:     SYSTEM_Initialize();
  3180  0058  3182  2249  3180   	fcall	_SYSTEM_Initialize
  3181  005B                     l1646:
  3182                           
  3183                           ;main.c: 128:     (INTCONbits.GIE = 1);
  3184  005B  178B               	bsf	11,7	;volatile
  3185  005C                     l1648:
  3186                           
  3187                           ;main.c: 131:     (INTCONbits.PEIE = 1);
  3188  005C  170B               	bsf	11,6	;volatile
  3189  005D                     l1650:
  3190                           
  3191                           ;main.c: 138:     grab_flag=1;
  3192  005D  0020               	movlb	0	; select bank0
  3193  005E  01D9               	clrf	_grab_flag
  3194  005F  0AD9               	incf	_grab_flag,f
  3195  0060                     l1652:
  3196                           
  3197                           ;main.c: 139:     toggle=1;
  3198  0060  01D8               	clrf	_toggle
  3199  0061  0AD8               	incf	_toggle,f
  3200                           
  3201                           ;main.c: 140:     EUSART_Initialize();
  3202  0062  3180  20AB  3180   	fcall	_EUSART_Initialize
  3203  0065                     l1654:
  3204                           
  3205                           ;main.c: 141:     RB7 = 0;
  3206  0065  0020               	movlb	0	; select bank0
  3207  0066  138D               	bcf	13,7	;volatile
  3208  0067                     l1656:
  3209                           
  3210                           ;main.c: 143:     {;main.c: 148:         match_code = match(dollar_sign, 1);
  3211  0067  30A3               	movlw	low (STR_2| (0+32768))
  3212  0068  00F4               	movwf	match@strg
  3213  0069  3082               	movlw	high (STR_2| (0+32768))
  3214  006A  00F5               	movwf	match@strg+1
  3215  006B  01F6               	clrf	match@length
  3216  006C  0AF6               	incf	match@length,f
  3217  006D  3181  2154  3180   	fcall	_match
  3218  0070  00F9               	movwf	??_main
  3219  0071  0879               	movf	??_main,w
  3220  0072  0020               	movlb	0	; select bank0
  3221  0073  00D7               	movwf	_match_code
  3222  0074                     l1658:
  3223                           
  3224                           ;main.c: 149:         if(match_code==0)
  3225  0074  0857               	movf	_match_code,w
  3226  0075  1D03               	btfss	3,2
  3227  0076  2878               	goto	u931
  3228  0077  2879               	goto	u930
  3229  0078                     u931:
  3230  0078  2867               	goto	l1656
  3231  0079                     u930:
  3232  0079                     l1660:
  3233                           
  3234                           ;main.c: 150:         { match_code=match(anchor,6);
  3235  0079  305F               	movlw	low (STR_1| (0+32768))
  3236  007A  00F4               	movwf	match@strg
  3237  007B  3082               	movlw	high (STR_1| (0+32768))
  3238  007C  00F5               	movwf	match@strg+1
  3239  007D  3006               	movlw	6
  3240  007E  00F9               	movwf	??_main
  3241  007F  0879               	movf	??_main,w
  3242  0080  00F6               	movwf	match@length
  3243  0081  3181  2154  3180   	fcall	_match
  3244  0084  00FA               	movwf	??_main+1
  3245  0085  087A               	movf	??_main+1,w
  3246  0086  0020               	movlb	0	; select bank0
  3247  0087  00D7               	movwf	_match_code
  3248  0088                     l1662:
  3249                           
  3250                           ;main.c: 151:             if(match_code==0)
  3251  0088  0857               	movf	_match_code,w
  3252  0089  1D03               	btfss	3,2
  3253  008A  288C               	goto	u941
  3254  008B  288D               	goto	u940
  3255  008C                     u941:
  3256  008C  2867               	goto	l1656
  3257  008D                     u940:
  3258  008D                     l1664:
  3259                           
  3260                           ;main.c: 152:                 {grab(); parse();
  3261  008D  3181  21F3  3180   	fcall	_grab
  3262  0090  3181  21AC  3180   	fcall	_parse
  3263  0093                     l1666:
  3264                           
  3265                           ;main.c: 153:                 RC7 = (toggle & 0x1);
  3266  0093  0020               	movlb	0	; select bank0
  3267  0094  1858               	btfsc	_toggle,0
  3268  0095  2897               	goto	u951
  3269  0096  289A               	goto	u950
  3270  0097                     u951:
  3271  0097  0020               	movlb	0	; select bank0
  3272  0098  178E               	bsf	14,7	;volatile
  3273  0099  289C               	goto	u964
  3274  009A                     u950:
  3275  009A  0020               	movlb	0	; select bank0
  3276  009B  138E               	bcf	14,7	;volatile
  3277  009C                     u964:
  3278  009C                     l1668:
  3279                           
  3280                           ;main.c: 154:                 RC3 = !(toggle & 0x1);
  3281  009C  1C58               	btfss	_toggle,0
  3282  009D  289F               	goto	u971
  3283  009E  28A2               	goto	u970
  3284  009F                     u971:
  3285  009F  0020               	movlb	0	; select bank0
  3286  00A0  158E               	bsf	14,3	;volatile
  3287  00A1  28A4               	goto	u984
  3288  00A2                     u970:
  3289  00A2  0020               	movlb	0	; select bank0
  3290  00A3  118E               	bcf	14,3	;volatile
  3291  00A4                     u984:
  3292  00A4                     l1670:
  3293                           
  3294                           ;main.c: 155:                 toggle++;
  3295  00A4  3001               	movlw	1
  3296  00A5  00F9               	movwf	??_main
  3297  00A6  0879               	movf	??_main,w
  3298  00A7  07D8               	addwf	_toggle,f
  3299  00A8  2867               	goto	l1656
  3300  00A9  3180  2838         	ljmp	start
  3301  00AB                     __end_of_main:
  3302                           
  3303                           	psect	text1
  3304  01AC                     __ptext1:	
  3305 ;; *************** function _parse *****************
  3306 ;; Defined at:
  3307 ;;		line 74 in file "main.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  i               1    6[COMMON] unsigned char 
  3312 ;;  c               1    5[COMMON] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;Total ram usage:        3 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 6
  3329 ;; This function calls:
  3330 ;;		_getnext
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function _parse
  3338  01AC                     _parse:
  3339  01AC                     l1586:	
  3340                           ;incstack = 0
  3341                           ; Regs used in _parse: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3342                           
  3343                           
  3344                           ;main.c: 75:     uint8_t i, c;;main.c: 76:     for (i=0; i<3; i++)
  3345  01AC  01F6               	clrf	parse@i
  3346  01AD                     l1592:
  3347                           
  3348                           ;main.c: 77:     { getnext();}
  3349  01AD  3182  222A  3181   	fcall	_getnext
  3350  01B0                     l1594:
  3351  01B0  3001               	movlw	1
  3352  01B1  00F4               	movwf	??_parse
  3353  01B2  0874               	movf	??_parse,w
  3354  01B3  07F6               	addwf	parse@i,f
  3355  01B4                     l1596:
  3356  01B4  3003               	movlw	3
  3357  01B5  0276               	subwf	parse@i,w
  3358  01B6  1C03               	skipc
  3359  01B7  29B9               	goto	u831
  3360  01B8  29BA               	goto	u830
  3361  01B9                     u831:
  3362  01B9  29AD               	goto	l1592
  3363  01BA                     u830:
  3364  01BA                     l1598:
  3365                           
  3366                           ;main.c: 79:     c=getnext();
  3367  01BA  3182  222A  3181   	fcall	_getnext
  3368  01BD  00F4               	movwf	??_parse
  3369  01BE  0874               	movf	??_parse,w
  3370  01BF  00F5               	movwf	parse@c
  3371  01C0                     l1600:
  3372                           
  3373                           ;main.c: 80:     RB6 = c & 1;
  3374  01C0  1875               	btfsc	parse@c,0
  3375  01C1  29C3               	goto	u841
  3376  01C2  29C6               	goto	u840
  3377  01C3                     u841:
  3378  01C3  0020               	movlb	0	; select bank0
  3379  01C4  170D               	bsf	13,6	;volatile
  3380  01C5  29C8               	goto	u854
  3381  01C6                     u840:
  3382  01C6  0020               	movlb	0	; select bank0
  3383  01C7  130D               	bcf	13,6	;volatile
  3384  01C8                     u854:
  3385  01C8                     l1602:
  3386                           
  3387                           ;main.c: 81:     RC6 = c&1;
  3388  01C8  1875               	btfsc	parse@c,0
  3389  01C9  29CB               	goto	u861
  3390  01CA  29CE               	goto	u860
  3391  01CB                     u861:
  3392  01CB  0020               	movlb	0	; select bank0
  3393  01CC  170E               	bsf	14,6	;volatile
  3394  01CD  29D0               	goto	u874
  3395  01CE                     u860:
  3396  01CE  0020               	movlb	0	; select bank0
  3397  01CF  130E               	bcf	14,6	;volatile
  3398  01D0                     u874:
  3399  01D0                     l341:
  3400  01D0  0008               	return
  3401  01D1                     __end_of_parse:
  3402                           
  3403                           	psect	text2
  3404  0154                     __ptext2:	
  3405 ;; *************** function _match *****************
  3406 ;; Defined at:
  3407 ;;		line 93 in file "main.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  strg            2    4[COMMON] PTR unsigned char 
  3410 ;;		 -> STR_2(2), STR_1(8), 
  3411 ;;  length          1    6[COMMON] unsigned char 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  next            1    0[BANK0 ] unsigned char 
  3414 ;;  retcode         1    2[BANK0 ] unsigned char 
  3415 ;;  flag            1    1[BANK0 ] unsigned char 
  3416 ;;  index           1    0        unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      unsigned char 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3426 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;Total ram usage:        8 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 6
  3433 ;; This function calls:
  3434 ;;		_getnext
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           
  3441                           ;psect for function _match
  3442  0154                     _match:
  3443  0154                     l1604:	
  3444                           ;incstack = 0
  3445                           ; Regs used in _match: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3446                           
  3447                           
  3448                           ;main.c: 94:     uint8_t flag, index,retcode;;main.c: 95:     flag=1;
  3449  0154  0020               	movlb	0	; select bank0
  3450  0155  01E1               	clrf	match@flag
  3451  0156  0AE1               	incf	match@flag,f
  3452  0157                     l1606:
  3453                           
  3454                           ;main.c: 97:     retcode=0;
  3455  0157  01E2               	clrf	match@retcode
  3456                           
  3457                           ;main.c: 99:     while ((length > 0) & (flag==1)){
  3458  0158  2976               	goto	l1618
  3459  0159                     l1608:
  3460                           
  3461                           ;main.c: 100:         uint8_t next;;main.c: 101:         next=getnext();
  3462  0159  3182  222A  3181   	fcall	_getnext
  3463  015C  00F7               	movwf	??_match
  3464  015D  0877               	movf	??_match,w
  3465  015E  0020               	movlb	0	; select bank0
  3466  015F  00E0               	movwf	match@next
  3467  0160                     l1610:
  3468                           
  3469                           ;main.c: 102:         if( (next) != (*strg++)) {flag=0; retcode=1;}
  3470  0160  0875               	movf	match@strg+1,w
  3471  0161  00F8               	movwf	??_match+1
  3472  0162  0874               	movf	match@strg,w
  3473  0163  00F7               	movwf	??_match
  3474  0164  0AF4               	incf	match@strg,f
  3475  0165  1903               	skipnz
  3476  0166  0AF5               	incf	match@strg+1,f
  3477  0167  0877               	movf	??_match,w
  3478  0168  0084               	movwf	4
  3479  0169  0878               	movf	??_match+1,w
  3480  016A  0085               	movwf	5
  3481  016B  0800               	movf	0,w	;code access
  3482  016C  0660               	xorwf	match@next,w
  3483  016D  1903               	skipnz
  3484  016E  2970               	goto	u881
  3485  016F  2971               	goto	u880
  3486  0170                     u881:
  3487  0170  2974               	goto	l1616
  3488  0171                     u880:
  3489  0171                     l1612:
  3490  0171  01E1               	clrf	match@flag
  3491  0172                     l1614:
  3492  0172  01E2               	clrf	match@retcode
  3493  0173  0AE2               	incf	match@retcode,f
  3494  0174                     l1616:
  3495                           
  3496                           ;main.c: 103:         length--;
  3497  0174  3001               	movlw	1
  3498  0175  02F6               	subwf	match@length,f
  3499  0176                     l1618:
  3500                           
  3501                           ;main.c: 99:     while ((length > 0) & (flag==1)){
  3502  0176  0876               	movf	match@length,w
  3503  0177  1903               	btfsc	3,2
  3504  0178  297A               	goto	u891
  3505  0179  297B               	goto	u890
  3506  017A                     u891:
  3507  017A  2980               	goto	l1622
  3508  017B                     u890:
  3509  017B                     l1620:
  3510  017B  0361               	decf	match@flag,w
  3511  017C  1903               	btfsc	3,2
  3512  017D  297F               	goto	u901
  3513  017E  2980               	goto	u900
  3514  017F                     u901:
  3515  017F  2959               	goto	l1608
  3516  0180                     u900:
  3517  0180                     l1622:
  3518                           
  3519                           ;main.c: 105:    return retcode; }
  3520  0180  0862               	movf	match@retcode,w
  3521  0181                     l356:
  3522  0181  0008               	return
  3523  0182                     __end_of_match:
  3524                           
  3525                           	psect	text3
  3526  01F3                     __ptext3:	
  3527 ;; *************** function _grab *****************
  3528 ;; Defined at:
  3529 ;;		line 107 in file "main.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  i               1    5[COMMON] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;Total ram usage:        2 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 6
  3550 ;; This function calls:
  3551 ;;		_getnext
  3552 ;; This function is called by:
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           
  3558                           ;psect for function _grab
  3559  01F3                     _grab:
  3560  01F3                     l1626:	
  3561                           ;incstack = 0
  3562                           ; Regs used in _grab: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3563                           
  3564                           
  3565                           ;main.c: 109:     uint8_t i;;main.c: 110:     if (grab_flag==1){
  3566  01F3  0020               	movlb	0	; select bank0
  3567  01F4  0359               	decf	_grab_flag,w
  3568  01F5  1D03               	btfss	3,2
  3569  01F6  29F8               	goto	u911
  3570  01F7  29F9               	goto	u910
  3571  01F8                     u911:
  3572  01F8  2A0F               	goto	l362
  3573  01F9                     u910:
  3574  01F9                     l1628:
  3575                           
  3576                           ;main.c: 111:     grab_flag=0;
  3577  01F9  01D9               	clrf	_grab_flag
  3578                           
  3579                           ;main.c: 112:     for (i=0; i<10; i++)
  3580  01FA  01F5               	clrf	grab@i
  3581  01FB                     l1634:
  3582                           
  3583                           ;main.c: 113:     {buf[i] = getnext();}
  3584  01FB  3182  222A  3181   	fcall	_getnext
  3585  01FE  00F4               	movwf	??_grab
  3586  01FF  0875               	movf	grab@i,w
  3587  0200  3E20               	addlw	(low (_buf| 0))& (0+255)
  3588  0201  0086               	movwf	6
  3589  0202  0187               	clrf	7
  3590  0203  0874               	movf	??_grab,w
  3591  0204  0081               	movwf	1
  3592  0205                     l1636:
  3593  0205  3001               	movlw	1
  3594  0206  00F4               	movwf	??_grab
  3595  0207  0874               	movf	??_grab,w
  3596  0208  07F5               	addwf	grab@i,f
  3597  0209                     l1638:
  3598  0209  300A               	movlw	10
  3599  020A  0275               	subwf	grab@i,w
  3600  020B  1C03               	skipc
  3601  020C  2A0E               	goto	u921
  3602  020D  2A0F               	goto	u920
  3603  020E                     u921:
  3604  020E  29FB               	goto	l1634
  3605  020F                     u920:
  3606  020F                     l362:
  3607  020F  0008               	return
  3608  0210                     __end_of_grab:
  3609                           
  3610                           	psect	text4
  3611  022A                     __ptext4:	
  3612 ;; *************** function _getnext *****************
  3613 ;; Defined at:
  3614 ;;		line 84 in file "main.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      unsigned char 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3631 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;Total ram usage:        1 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 5
  3635 ;; This function calls:
  3636 ;;		_EUSART_Read
  3637 ;;		_EUSART_is_rx_ready
  3638 ;; This function is called by:
  3639 ;;		_parse
  3640 ;;		_match
  3641 ;;		_grab
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           
  3646                           ;psect for function _getnext
  3647  022A                     _getnext:
  3648  022A                     l1576:	
  3649                           ;incstack = 0
  3650                           ; Regs used in _getnext: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3651                           
  3652  022A                     l1578:	
  3653                           ;main.c: 86:     while(!(EUSART_is_rx_ready()))
  3654                           
  3655                           
  3656                           ;main.c: 86:     while(!(EUSART_is_rx_ready()))
  3657  022A  3182  2256  3182   	fcall	_EUSART_is_rx_ready
  3658  022D  3A00               	xorlw	0
  3659  022E  1903               	skipnz
  3660  022F  2A31               	goto	u821
  3661  0230  2A32               	goto	u820
  3662  0231                     u821:
  3663  0231  2A2A               	goto	l1578
  3664  0232                     u820:
  3665  0232                     l1580:
  3666                           
  3667                           ;main.c: 88:     rxData=EUSART_Read();
  3668  0232  3181  2182  3182   	fcall	_EUSART_Read
  3669  0235  00F3               	movwf	??_getnext
  3670  0236  0873               	movf	??_getnext,w
  3671  0237  0020               	movlb	0	; select bank0
  3672  0238  00C7               	movwf	_rxData
  3673  0239                     l1582:
  3674                           
  3675                           ;main.c: 89:     return rxData;
  3676  0239  0847               	movf	_rxData,w
  3677  023A                     l347:
  3678  023A  0008               	return
  3679  023B                     __end_of_getnext:
  3680                           
  3681                           	psect	text5
  3682  0256                     __ptext5:	
  3683 ;; *************** function _EUSART_is_rx_ready *****************
  3684 ;; Defined at:
  3685 ;;		line 137 in file "mcc_generated_files/eusart.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      _Bool 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 4
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_getnext
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function _EUSART_is_rx_ready
  3715  0256                     _EUSART_is_rx_ready:
  3716  0256                     l1550:	
  3717                           ;incstack = 0
  3718                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  3719                           
  3720                           
  3721                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  3722  0256  0020               	movlb	0	; select bank0
  3723  0257  084A               	movf	_eusartRxCount,w	;volatile
  3724  0258  1D03               	btfss	3,2
  3725  0259  2A5B               	goto	u781
  3726  025A  2A5D               	goto	u780
  3727  025B                     u781:
  3728  025B  3001               	movlw	1
  3729  025C  2A5E               	goto	u790
  3730  025D                     u780:
  3731  025D  3000               	movlw	0
  3732  025E                     u790:
  3733  025E                     l81:
  3734  025E  0008               	return
  3735  025F                     __end_of_EUSART_is_rx_ready:
  3736                           
  3737                           	psect	text6
  3738  0182                     __ptext6:	
  3739 ;; *************** function _EUSART_Read *****************
  3740 ;; Defined at:
  3741 ;;		line 151 in file "mcc_generated_files/eusart.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  readValue       1    2[COMMON] unsigned char 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      unsigned char 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;Total ram usage:        2 bytes
  3760 ;; Hardware stack levels used: 1
  3761 ;; Hardware stack levels required when called: 4
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_getnext
  3766 ;;		_getch
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           
  3771                           ;psect for function _EUSART_Read
  3772  0182                     _EUSART_Read:
  3773  0182                     l1554:	
  3774                           ;incstack = 0
  3775                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  3776                           
  3777  0182                     l1556:	
  3778                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  3779                           
  3780                           
  3781                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  3782  0182  0020               	movlb	0	; select bank0
  3783  0183  084A               	movf	_eusartRxCount,w	;volatile
  3784  0184  1903               	btfsc	3,2
  3785  0185  2987               	goto	u801
  3786  0186  2988               	goto	u800
  3787  0187                     u801:
  3788  0187  2982               	goto	l1556
  3789  0188                     u800:
  3790  0188                     l1558:
  3791                           
  3792                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  3793  0188  087B               	movf	_eusartRxTail,w	;volatile
  3794  0189  3E2A               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  3795  018A  0086               	movwf	6
  3796  018B  0187               	clrf	7
  3797  018C  0801               	movf	1,w
  3798  018D  00F1               	movwf	??_EUSART_Read
  3799  018E  0871               	movf	??_EUSART_Read,w
  3800  018F  00C9               	movwf	_eusartRxLastError	;volatile
  3801                           
  3802                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  3803  0190  087B               	movf	_eusartRxTail,w
  3804  0191  3E32               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  3805  0192  0086               	movwf	6
  3806  0193  0187               	clrf	7
  3807  0194  0801               	movf	1,w
  3808  0195  00F1               	movwf	??_EUSART_Read
  3809  0196  0871               	movf	??_EUSART_Read,w
  3810  0197  00F2               	movwf	EUSART_Read@readValue
  3811  0198                     l1560:
  3812  0198  3001               	movlw	1
  3813  0199  00F1               	movwf	??_EUSART_Read
  3814  019A  0871               	movf	??_EUSART_Read,w
  3815  019B  07FB               	addwf	_eusartRxTail,f	;volatile
  3816  019C                     l1562:
  3817                           
  3818                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  3819  019C  3008               	movlw	8
  3820  019D  027B               	subwf	_eusartRxTail,w	;volatile
  3821  019E  1C03               	skipc
  3822  019F  29A1               	goto	u811
  3823  01A0  29A2               	goto	u810
  3824  01A1                     u811:
  3825  01A1  29A3               	goto	l1566
  3826  01A2                     u810:
  3827  01A2                     l1564:
  3828                           
  3829                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  3830  01A2  01FB               	clrf	_eusartRxTail	;volatile
  3831  01A3                     l1566:
  3832                           
  3833                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  3834  01A3  0021               	movlb	1	; select bank1
  3835  01A4  1290               	bcf	16,5	;volatile
  3836  01A5                     l1568:
  3837                           
  3838                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  3839  01A5  3001               	movlw	1
  3840  01A6  0020               	movlb	0	; select bank0
  3841  01A7  02CA               	subwf	_eusartRxCount,f	;volatile
  3842  01A8                     l1570:
  3843                           
  3844                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  3845  01A8  0021               	movlb	1	; select bank1
  3846  01A9  1690               	bsf	16,5	;volatile
  3847  01AA                     l1572:
  3848                           
  3849                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  3850  01AA  0872               	movf	EUSART_Read@readValue,w
  3851  01AB                     l94:
  3852  01AB  0008               	return
  3853  01AC                     __end_of_EUSART_Read:
  3854                           
  3855                           	psect	text7
  3856  0249                     __ptext7:	
  3857 ;; *************** function _SYSTEM_Initialize *****************
  3858 ;; Defined at:
  3859 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0, pclath, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 6
  3880 ;; This function calls:
  3881 ;;		_EUSART_Initialize
  3882 ;;		_OSCILLATOR_Initialize
  3883 ;;		_PIN_MANAGER_Initialize
  3884 ;;		_TMR0_Initialize
  3885 ;; This function is called by:
  3886 ;;		_main
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function _SYSTEM_Initialize
  3892  0249                     _SYSTEM_Initialize:
  3893  0249                     l1420:	
  3894                           ;incstack = 0
  3895                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3896                           
  3897                           
  3898                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  3899  0249  3181  2123  3182   	fcall	_PIN_MANAGER_Initialize
  3900                           
  3901                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  3902  024C  3182  2267  3182   	fcall	_OSCILLATOR_Initialize
  3903                           
  3904                           ;mcc_generated_files/mcc.c: 54:     TMR0_Initialize();
  3905  024F  3182  223B  3182   	fcall	_TMR0_Initialize
  3906                           
  3907                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  3908  0252  3180  20AB  3182   	fcall	_EUSART_Initialize
  3909  0255                     l221:
  3910  0255  0008               	return
  3911  0256                     __end_of_SYSTEM_Initialize:
  3912                           
  3913                           	psect	text8
  3914  023B                     __ptext8:	
  3915 ;; *************** function _TMR0_Initialize *****************
  3916 ;; Defined at:
  3917 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3935 ;;Total ram usage:        1 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; Hardware stack levels required when called: 4
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_SYSTEM_Initialize
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function _TMR0_Initialize
  3947  023B                     _TMR0_Initialize:
  3948  023B                     l1352:	
  3949                           ;incstack = 0
  3950                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  3951                           
  3952                           
  3953                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  3954  023B  0021               	movlb	1	; select bank1
  3955  023C  0815               	movf	21,w	;volatile
  3956  023D  39C0               	andlw	192
  3957  023E  3817               	iorlw	23
  3958  023F  0095               	movwf	21	;volatile
  3959  0240                     l1354:
  3960                           
  3961                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x9E;
  3962  0240  309E               	movlw	158
  3963  0241  0020               	movlb	0	; select bank0
  3964  0242  0095               	movwf	21	;volatile
  3965  0243                     l1356:
  3966                           
  3967                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 158;
  3968  0243  309E               	movlw	158
  3969  0244  00F1               	movwf	??_TMR0_Initialize
  3970  0245  0871               	movf	??_TMR0_Initialize,w
  3971  0246  00DA               	movwf	_timer0ReloadVal	;volatile
  3972  0247                     l1358:
  3973                           
  3974                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  3975  0247  110B               	bcf	11,2	;volatile
  3976  0248                     l239:
  3977  0248  0008               	return
  3978  0249                     __end_of_TMR0_Initialize:
  3979                           
  3980                           	psect	text9
  3981  0123                     __ptext9:	
  3982 ;; *************** function _PIN_MANAGER_Initialize *****************
  3983 ;; Defined at:
  3984 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 4
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_SYSTEM_Initialize
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           
  4013                           ;psect for function _PIN_MANAGER_Initialize
  4014  0123                     _PIN_MANAGER_Initialize:
  4015  0123                     l1314:	
  4016                           ;incstack = 0
  4017                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4018                           
  4019                           
  4020                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4021  0123  0022               	movlb	2	; select bank2
  4022  0124  018C               	clrf	12	;volatile
  4023                           
  4024                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4025  0125  018D               	clrf	13	;volatile
  4026                           
  4027                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4028  0126  018E               	clrf	14	;volatile
  4029  0127                     l1316:
  4030                           
  4031                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  4032  0127  3037               	movlw	55
  4033  0128  0021               	movlb	1	; select bank1
  4034  0129  008C               	movwf	12	;volatile
  4035  012A                     l1318:
  4036                           
  4037                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x30;
  4038  012A  3030               	movlw	48
  4039  012B  008D               	movwf	13	;volatile
  4040  012C                     l1320:
  4041                           
  4042                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x37;
  4043  012C  3037               	movlw	55
  4044  012D  008E               	movwf	14	;volatile
  4045  012E                     l1322:
  4046                           
  4047                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x07;
  4048  012E  3007               	movlw	7
  4049  012F  0023               	movlb	3	; select bank3
  4050  0130  008E               	movwf	14	;volatile
  4051  0131                     l1324:
  4052                           
  4053                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x90;
  4054  0131  3090               	movlw	144
  4055  0132  008D               	movwf	13	;volatile
  4056  0133                     l1326:
  4057                           
  4058                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  4059  0133  3017               	movlw	23
  4060  0134  008C               	movwf	12	;volatile
  4061                           
  4062                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4063  0135  0024               	movlb	4	; select bank4
  4064  0136  018D               	clrf	13	;volatile
  4065                           
  4066                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  4067  0137  018C               	clrf	12	;volatile
  4068                           
  4069                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  4070  0138  018E               	clrf	14	;volatile
  4071  0139                     l1328:
  4072                           
  4073                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  4074  0139  0021               	movlb	1	; select bank1
  4075  013A  1795               	bsf	21,7	;volatile
  4076                           
  4077                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  4078  013B  0025               	movlb	5	; select bank5
  4079  013C  018C               	clrf	12	;volatile
  4080                           
  4081                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  4082  013D  018D               	clrf	13	;volatile
  4083                           
  4084                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  4085  013E  018E               	clrf	14	;volatile
  4086  013F                     l1330:
  4087                           
  4088                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  4089  013F  3037               	movlw	55
  4090  0140  0026               	movlb	6	; select bank6
  4091  0141  008C               	movwf	12	;volatile
  4092  0142                     l1332:
  4093                           
  4094                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  4095  0142  30F0               	movlw	240
  4096  0143  008D               	movwf	13	;volatile
  4097  0144                     l1334:
  4098                           
  4099                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  4100  0144  30FF               	movlw	255
  4101  0145  008E               	movwf	14	;volatile
  4102  0146                     l1336:
  4103                           
  4104                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  4105  0146  303F               	movlw	63
  4106  0147  0027               	movlb	7	; select bank7
  4107  0148  008C               	movwf	12	;volatile
  4108  0149                     l1338:
  4109                           
  4110                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  4111  0149  30F0               	movlw	240
  4112  014A  008D               	movwf	13	;volatile
  4113  014B                     l1340:
  4114                           
  4115                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  4116  014B  30FF               	movlw	255
  4117  014C  008E               	movwf	14	;volatile
  4118  014D                     l1342:
  4119                           
  4120                           ;mcc_generated_files/pin_manager.c: 114:     RXPPS = 0x0D;
  4121  014D  300D               	movlw	13
  4122  014E  003C               	movlb	28	; select bank28
  4123  014F  00A4               	movwf	36	;volatile
  4124  0150                     l1344:
  4125                           
  4126                           ;mcc_generated_files/pin_manager.c: 115:     RB7PPS = 0x12;
  4127  0150  3012               	movlw	18
  4128  0151  003D               	movlb	29	; select bank29
  4129  0152  009F               	movwf	31	;volatile
  4130  0153                     l201:
  4131  0153  0008               	return
  4132  0154                     __end_of_PIN_MANAGER_Initialize:
  4133                           
  4134                           	psect	text10
  4135  0267                     __ptext10:	
  4136 ;; *************** function _OSCILLATOR_Initialize *****************
  4137 ;; Defined at:
  4138 ;;		line 58 in file "mcc_generated_files/mcc.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;Total ram usage:        0 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; Hardware stack levels required when called: 4
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_SYSTEM_Initialize
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _OSCILLATOR_Initialize
  4168  0267                     _OSCILLATOR_Initialize:
  4169  0267                     l1346:	
  4170                           ;incstack = 0
  4171                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4172                           
  4173                           
  4174                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x6A;
  4175  0267  306A               	movlw	106
  4176  0268  0021               	movlb	1	; select bank1
  4177  0269  0099               	movwf	25	;volatile
  4178  026A                     l1348:
  4179                           
  4180                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  4181  026A  0198               	clrf	24	;volatile
  4182  026B                     l1350:
  4183                           
  4184                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  4185  026B  0022               	movlb	2	; select bank2
  4186  026C  0196               	clrf	22	;volatile
  4187  026D                     l224:
  4188  026D  0008               	return
  4189  026E                     __end_of_OSCILLATOR_Initialize:
  4190                           
  4191                           	psect	text11
  4192  00AB                     __ptext11:	
  4193 ;; *************** function _EUSART_Initialize *****************
  4194 ;; Defined at:
  4195 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0, pclath, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4213 ;;Total ram usage:        1 bytes
  4214 ;; Hardware stack levels used: 1
  4215 ;; Hardware stack levels required when called: 5
  4216 ;; This function calls:
  4217 ;;		_EUSART_SetErrorHandler
  4218 ;;		_EUSART_SetFramingErrorHandler
  4219 ;;		_EUSART_SetOverrunErrorHandler
  4220 ;;		_EUSART_SetRxInterruptHandler
  4221 ;;		_EUSART_SetTxInterruptHandler
  4222 ;; This function is called by:
  4223 ;;		_SYSTEM_Initialize
  4224 ;;		_main
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           
  4229                           ;psect for function _EUSART_Initialize
  4230  00AB                     _EUSART_Initialize:
  4231  00AB                     l1278:	
  4232                           ;incstack = 0
  4233                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4234                           
  4235                           
  4236                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4237  00AB  0021               	movlb	1	; select bank1
  4238  00AC  1290               	bcf	16,5	;volatile
  4239  00AD                     l1280:
  4240                           
  4241                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4242  00AD  30EA               	movlw	low _EUSART_Receive_ISR
  4243  00AE  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4244  00AF  3000               	movlw	high _EUSART_Receive_ISR
  4245  00B0  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4246  00B1  3182  227A  3180   	fcall	_EUSART_SetRxInterruptHandler
  4247  00B4                     l1282:
  4248                           
  4249                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4250  00B4  0021               	movlb	1	; select bank1
  4251  00B5  1210               	bcf	16,4	;volatile
  4252                           
  4253                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4254  00B6  30D1               	movlw	low _EUSART_Transmit_ISR
  4255  00B7  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4256  00B8  3001               	movlw	high _EUSART_Transmit_ISR
  4257  00B9  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4258  00BA  3182  2274  3180   	fcall	_EUSART_SetTxInterruptHandler
  4259  00BD                     l1284:
  4260                           
  4261                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
  4262  00BD  3008               	movlw	8
  4263  00BE  0023               	movlb	3	; select bank3
  4264  00BF  009F               	movwf	31	;volatile
  4265  00C0                     l1286:
  4266                           
  4267                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
  4268  00C0  3090               	movlw	144
  4269  00C1  009D               	movwf	29	;volatile
  4270  00C2                     l1288:
  4271                           
  4272                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
  4273  00C2  3024               	movlw	36
  4274  00C3  009E               	movwf	30	;volatile
  4275  00C4                     l1290:
  4276                           
  4277                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x67;
  4278  00C4  3067               	movlw	103
  4279  00C5  009B               	movwf	27	;volatile
  4280  00C6                     l1292:
  4281                           
  4282                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  4283  00C6  019C               	clrf	28	;volatile
  4284  00C7                     l1294:
  4285                           
  4286                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4287  00C7  30A5               	movlw	low _EUSART_DefaultFramingErrorHandler
  4288  00C8  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4289  00C9  3002               	movlw	high _EUSART_DefaultFramingErrorHandler
  4290  00CA  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4291  00CB  3182  2286  3180   	fcall	_EUSART_SetFramingErrorHandler
  4292  00CE                     l1296:
  4293                           
  4294                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4295  00CE  309B               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4296  00CF  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4297  00D0  3002               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4298  00D1  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4299  00D2  3182  2280  3180   	fcall	_EUSART_SetOverrunErrorHandler
  4300  00D5                     l1298:
  4301                           
  4302                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4303  00D5  309F               	movlw	low _EUSART_DefaultErrorHandler
  4304  00D6  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
  4305  00D7  3002               	movlw	high _EUSART_DefaultErrorHandler
  4306  00D8  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4307  00D9  3182  228C  3180   	fcall	_EUSART_SetErrorHandler
  4308                           
  4309                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4310  00DC  0020               	movlb	0	; select bank0
  4311  00DD  01C9               	clrf	_eusartRxLastError	;volatile
  4312                           
  4313                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4314  00DE  01CC               	clrf	_eusartTxHead	;volatile
  4315                           
  4316                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4317  00DF  01CB               	clrf	_eusartTxTail	;volatile
  4318  00E0                     l1300:
  4319                           
  4320                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4321  00E0  3008               	movlw	8
  4322  00E1  00F3               	movwf	??_EUSART_Initialize
  4323  00E2  0873               	movf	??_EUSART_Initialize,w
  4324  00E3  00DB               	movwf	_eusartTxBufferRemaining	;volatile
  4325  00E4                     l1302:
  4326                           
  4327                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4328  00E4  01FC               	clrf	_eusartRxHead	;volatile
  4329  00E5                     l1304:
  4330                           
  4331                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4332  00E5  01FB               	clrf	_eusartRxTail	;volatile
  4333  00E6                     l1306:
  4334                           
  4335                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4336  00E6  01CA               	clrf	_eusartRxCount	;volatile
  4337  00E7                     l1308:
  4338                           
  4339                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4340  00E7  0021               	movlb	1	; select bank1
  4341  00E8  1690               	bsf	16,5	;volatile
  4342  00E9                     l75:
  4343  00E9  0008               	return
  4344  00EA                     __end_of_EUSART_Initialize:
  4345                           
  4346                           	psect	text12
  4347  0274                     __ptext12:	
  4348 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4349 ;; Defined at:
  4350 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4353 ;;		 -> EUSART_Transmit_ISR(1), 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4369 ;;Total ram usage:        2 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; Hardware stack levels required when called: 4
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_EUSART_Initialize
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           
  4380                           ;psect for function _EUSART_SetTxInterruptHandler
  4381  0274                     _EUSART_SetTxInterruptHandler:
  4382  0274                     l1234:	
  4383                           ;incstack = 0
  4384                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4385                           
  4386                           
  4387                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4388  0274  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4389  0275  0020               	movlb	0	; select bank0
  4390  0276  00D6               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4391  0277  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4392  0278  00D5               	movwf	_EUSART_TxDefaultInterruptHandler
  4393  0279                     l147:
  4394  0279  0008               	return
  4395  027A                     __end_of_EUSART_SetTxInterruptHandler:
  4396                           
  4397                           	psect	text13
  4398  027A                     __ptext13:	
  4399 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4400 ;; Defined at:
  4401 ;;		line 289 in file "mcc_generated_files/eusart.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4404 ;;		 -> EUSART_Receive_ISR(1), 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;Total ram usage:        2 bytes
  4421 ;; Hardware stack levels used: 1
  4422 ;; Hardware stack levels required when called: 4
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_EUSART_Initialize
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function _EUSART_SetRxInterruptHandler
  4432  027A                     _EUSART_SetRxInterruptHandler:
  4433  027A                     l1232:	
  4434                           ;incstack = 0
  4435                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4436                           
  4437                           
  4438                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4439  027A  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4440  027B  0020               	movlb	0	; select bank0
  4441  027C  00D4               	movwf	_EUSART_RxDefaultInterruptHandler+1
  4442  027D  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4443  027E  00D3               	movwf	_EUSART_RxDefaultInterruptHandler
  4444  027F                     l150:
  4445  027F  0008               	return
  4446  0280                     __end_of_EUSART_SetRxInterruptHandler:
  4447                           
  4448                           	psect	text14
  4449  0280                     __ptext14:	
  4450 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4451 ;; Defined at:
  4452 ;;		line 277 in file "mcc_generated_files/eusart.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4455 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;Total ram usage:        2 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; Hardware stack levels required when called: 4
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_EUSART_Initialize
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           
  4482                           ;psect for function _EUSART_SetOverrunErrorHandler
  4483  0280                     _EUSART_SetOverrunErrorHandler:
  4484  0280                     l1238:	
  4485                           ;incstack = 0
  4486                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4487                           
  4488                           
  4489                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  4490  0280  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4491  0281  0020               	movlb	0	; select bank0
  4492  0282  00D0               	movwf	_EUSART_OverrunErrorHandler+1
  4493  0283  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4494  0284  00CF               	movwf	_EUSART_OverrunErrorHandler
  4495  0285                     l141:
  4496  0285  0008               	return
  4497  0286                     __end_of_EUSART_SetOverrunErrorHandler:
  4498                           
  4499                           	psect	text15
  4500  0286                     __ptext15:	
  4501 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4502 ;; Defined at:
  4503 ;;		line 273 in file "mcc_generated_files/eusart.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4506 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4522 ;;Total ram usage:        2 bytes
  4523 ;; Hardware stack levels used: 1
  4524 ;; Hardware stack levels required when called: 4
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_EUSART_Initialize
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           
  4533                           ;psect for function _EUSART_SetFramingErrorHandler
  4534  0286                     _EUSART_SetFramingErrorHandler:
  4535  0286                     l1236:	
  4536                           ;incstack = 0
  4537                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4538                           
  4539                           
  4540                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  4541  0286  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4542  0287  0020               	movlb	0	; select bank0
  4543  0288  00D2               	movwf	_EUSART_FramingErrorHandler+1
  4544  0289  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4545  028A  00D1               	movwf	_EUSART_FramingErrorHandler
  4546  028B                     l138:
  4547  028B  0008               	return
  4548  028C                     __end_of_EUSART_SetFramingErrorHandler:
  4549                           
  4550                           	psect	text16
  4551  028C                     __ptext16:	
  4552 ;; *************** function _EUSART_SetErrorHandler *****************
  4553 ;; Defined at:
  4554 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4557 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;Total ram usage:        2 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; Hardware stack levels required when called: 4
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_EUSART_Initialize
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           
  4584                           ;psect for function _EUSART_SetErrorHandler
  4585  028C                     _EUSART_SetErrorHandler:
  4586  028C                     l1240:	
  4587                           ;incstack = 0
  4588                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4589                           
  4590                           
  4591                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4592  028C  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4593  028D  0020               	movlb	0	; select bank0
  4594  028E  00CE               	movwf	_EUSART_ErrorHandler+1
  4595  028F  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4596  0290  00CD               	movwf	_EUSART_ErrorHandler
  4597  0291                     l144:
  4598  0291  0008               	return
  4599  0292                     __end_of_EUSART_SetErrorHandler:
  4600                           
  4601                           	psect	intentry
  4602  0004                     __pintentry:	
  4603 ;; *************** function _INTERRUPT_InterruptManager *****************
  4604 ;; Defined at:
  4605 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;		None
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;Total ram usage:        0 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; Hardware stack levels required when called: 3
  4626 ;; This function calls:
  4627 ;;		Absolute function
  4628 ;;		_EUSART_Receive_ISR
  4629 ;;		_EUSART_Transmit_ISR
  4630 ;;		_TMR0_ISR
  4631 ;; This function is called by:
  4632 ;;		Interrupt level 1
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636  0004                     _INTERRUPT_InterruptManager:
  4637                           
  4638                           ;incstack = 0
  4639  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4640                           
  4641                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4642  0005  3180               	pagesel	$
  4643  0006                     i1l1492:
  4644                           
  4645                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4646  0006  1E8B               	btfss	11,5	;volatile
  4647  0007  2809               	goto	u63_21
  4648  0008  280A               	goto	u63_20
  4649  0009                     u63_21:
  4650  0009  2812               	goto	i1l275
  4651  000A                     u63_20:
  4652  000A                     i1l1494:
  4653  000A  1D0B               	btfss	11,2	;volatile
  4654  000B  280D               	goto	u64_21
  4655  000C  280E               	goto	u64_20
  4656  000D                     u64_21:
  4657  000D  2812               	goto	i1l275
  4658  000E                     u64_20:
  4659  000E                     i1l1496:
  4660                           
  4661                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4662  000E  3182  2292  3180   	fcall	_TMR0_ISR
  4663                           
  4664                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4665  0011  2836               	goto	i1l283
  4666  0012                     i1l275:	
  4667                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4668                           
  4669  0012  1F0B               	btfss	11,6	;volatile
  4670  0013  2815               	goto	u65_21
  4671  0014  2816               	goto	u65_20
  4672  0015                     u65_21:
  4673  0015  2836               	goto	i1l283
  4674  0016                     u65_20:
  4675  0016                     i1l1498:
  4676                           
  4677                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  4678  0016  0021               	movlb	1	; select bank1
  4679  0017  1E10               	btfss	16,4	;volatile
  4680  0018  281A               	goto	u66_21
  4681  0019  281B               	goto	u66_20
  4682  001A                     u66_21:
  4683  001A  2826               	goto	i1l278
  4684  001B                     u66_20:
  4685  001B                     i1l1500:
  4686  001B  0020               	movlb	0	; select bank0
  4687  001C  1E10               	btfss	16,4	;volatile
  4688  001D  281F               	goto	u67_21
  4689  001E  2820               	goto	u67_20
  4690  001F                     u67_21:
  4691  001F  2826               	goto	i1l278
  4692  0020                     u67_20:
  4693  0020                     i1l1502:
  4694                           
  4695                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
  4696  0020  0856               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  4697  0021  008A               	movwf	10
  4698  0022  0855               	movf	_EUSART_TxDefaultInterruptHandler,w
  4699  0023  000A               	callw
  4700  0024  3180               	pagesel	$
  4701                           
  4702                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4703  0025  2836               	goto	i1l283
  4704  0026                     i1l278:	
  4705                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  4706                           
  4707  0026  0021               	movlb	1	; select bank1
  4708  0027  1E90               	btfss	16,5	;volatile
  4709  0028  282A               	goto	u68_21
  4710  0029  282B               	goto	u68_20
  4711  002A                     u68_21:
  4712  002A  2836               	goto	i1l282
  4713  002B                     u68_20:
  4714  002B                     i1l1504:
  4715  002B  0020               	movlb	0	; select bank0
  4716  002C  1E90               	btfss	16,5	;volatile
  4717  002D  282F               	goto	u69_21
  4718  002E  2830               	goto	u69_20
  4719  002F                     u69_21:
  4720  002F  2836               	goto	i1l282
  4721  0030                     u69_20:
  4722  0030                     i1l1506:
  4723                           
  4724                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
  4725  0030  0854               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  4726  0031  008A               	movwf	10
  4727  0032  0853               	movf	_EUSART_RxDefaultInterruptHandler,w
  4728  0033  000A               	callw
  4729  0034  3180               	pagesel	$
  4730                           
  4731                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  4732  0035  2836               	goto	i1l283
  4733  0036                     i1l282:	
  4734                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  4735                           
  4736  0036                     i1l283:
  4737  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4738  0037  0009               	retfie
  4739  0038                     __end_of_INTERRUPT_InterruptManager:
  4740                           
  4741                           	psect	text18
  4742  0292                     __ptext18:	
  4743 ;; *************** function _TMR0_ISR *****************
  4744 ;; Defined at:
  4745 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;		None
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4763 ;;Total ram usage:        0 bytes
  4764 ;; Hardware stack levels used: 1
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_INTERRUPT_InterruptManager
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           
  4773                           ;psect for function _TMR0_ISR
  4774  0292                     _TMR0_ISR:
  4775  0292                     i1l1422:	
  4776                           ;incstack = 0
  4777                           ; Regs used in _TMR0_ISR: [wreg]
  4778                           
  4779                           
  4780                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
  4781  0292  110B               	bcf	11,2	;volatile
  4782  0293                     i1l1424:
  4783                           
  4784                           ;mcc_generated_files/tmr0.c: 86:     TMR0 = timer0ReloadVal;
  4785  0293  0020               	movlb	0	; select bank0
  4786  0294  085A               	movf	_timer0ReloadVal,w	;volatile
  4787  0295  0095               	movwf	21	;volatile
  4788  0296                     i1l243:
  4789  0296  0008               	return
  4790  0297                     __end_of_TMR0_ISR:
  4791                           
  4792                           	psect	text19
  4793  01D1                     __ptext19:	
  4794 ;; *************** function _EUSART_Transmit_ISR *****************
  4795 ;; Defined at:
  4796 ;;		line 206 in file "mcc_generated_files/eusart.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;Total ram usage:        1 bytes
  4815 ;; Hardware stack levels used: 1
  4816 ;; This function calls:
  4817 ;;		Nothing
  4818 ;; This function is called by:
  4819 ;;		_EUSART_Initialize
  4820 ;;		_INTERRUPT_InterruptManager
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           
  4825                           ;psect for function _EUSART_Transmit_ISR
  4826  01D1                     _EUSART_Transmit_ISR:
  4827  01D1                     i1l1388:	
  4828                           ;incstack = 0
  4829                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4830                           
  4831                           
  4832                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  4833  01D1  3008               	movlw	8
  4834  01D2  0020               	movlb	0	; select bank0
  4835  01D3  025B               	subwf	_eusartTxBufferRemaining,w	;volatile
  4836  01D4  1803               	skipnc
  4837  01D5  29D7               	goto	u48_21
  4838  01D6  29D8               	goto	u48_20
  4839  01D7                     u48_21:
  4840  01D7  29F0               	goto	i1l112
  4841  01D8                     u48_20:
  4842  01D8                     i1l1390:
  4843                           
  4844                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  4845  01D8  084B               	movf	_eusartTxTail,w
  4846  01D9  3E3A               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4847  01DA  0086               	movwf	6
  4848  01DB  0187               	clrf	7
  4849  01DC  0801               	movf	1,w
  4850  01DD  0023               	movlb	3	; select bank3
  4851  01DE  009A               	movwf	26	;volatile
  4852  01DF                     i1l1392:
  4853  01DF  3001               	movlw	1
  4854  01E0  00F0               	movwf	??_EUSART_Transmit_ISR
  4855  01E1  0870               	movf	??_EUSART_Transmit_ISR,w
  4856  01E2  0020               	movlb	0	; select bank0
  4857  01E3  07CB               	addwf	_eusartTxTail,f	;volatile
  4858  01E4                     i1l1394:
  4859                           
  4860                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4861  01E4  3008               	movlw	8
  4862  01E5  024B               	subwf	_eusartTxTail,w	;volatile
  4863  01E6  1C03               	skipc
  4864  01E7  29E9               	goto	u49_21
  4865  01E8  29EA               	goto	u49_20
  4866  01E9                     u49_21:
  4867  01E9  29EB               	goto	i1l1398
  4868  01EA                     u49_20:
  4869  01EA                     i1l1396:
  4870                           
  4871                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  4872  01EA  01CB               	clrf	_eusartTxTail	;volatile
  4873  01EB                     i1l1398:
  4874                           
  4875                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  4876  01EB  3001               	movlw	1
  4877  01EC  00F0               	movwf	??_EUSART_Transmit_ISR
  4878  01ED  0870               	movf	??_EUSART_Transmit_ISR,w
  4879  01EE  07DB               	addwf	_eusartTxBufferRemaining,f	;volatile
  4880                           
  4881                           ;mcc_generated_files/eusart.c: 218:     }
  4882  01EF  29F2               	goto	i1l115
  4883  01F0                     i1l112:	
  4884                           ;mcc_generated_files/eusart.c: 219:     else
  4885                           
  4886                           
  4887                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  4888  01F0  0021               	movlb	1	; select bank1
  4889  01F1  1210               	bcf	16,4	;volatile
  4890  01F2                     i1l115:
  4891  01F2  0008               	return
  4892  01F3                     __end_of_EUSART_Transmit_ISR:
  4893                           
  4894                           	psect	text20
  4895  00EA                     __ptext20:	
  4896 ;; *************** function _EUSART_Receive_ISR *****************
  4897 ;; Defined at:
  4898 ;;		line 225 in file "mcc_generated_files/eusart.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4916 ;;Total ram usage:        0 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; Hardware stack levels required when called: 2
  4919 ;; This function calls:
  4920 ;;		Absolute function
  4921 ;;		_EUSART_DefaultErrorHandler
  4922 ;;		_EUSART_DefaultFramingErrorHandler
  4923 ;;		_EUSART_DefaultOverrunErrorHandler
  4924 ;;		_EUSART_RxDataHandler
  4925 ;; This function is called by:
  4926 ;;		_EUSART_Initialize
  4927 ;;		_INTERRUPT_InterruptManager
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           
  4932                           ;psect for function _EUSART_Receive_ISR
  4933  00EA                     _EUSART_Receive_ISR:
  4934  00EA                     i1l1400:	
  4935                           ;incstack = 0
  4936                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4937                           
  4938                           
  4939                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  4940  00EA  087C               	movf	_eusartRxHead,w	;volatile
  4941  00EB  3E2A               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4942  00EC  0086               	movwf	6
  4943  00ED  0187               	clrf	7
  4944  00EE  0181               	clrf	1
  4945  00EF                     i1l1402:
  4946                           
  4947                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
  4948  00EF  0023               	movlb	3	; select bank3
  4949  00F0  1D1D               	btfss	29,2	;volatile
  4950  00F1  28F3               	goto	u50_21
  4951  00F2  28F4               	goto	u50_20
  4952  00F3                     u50_21:
  4953  00F3  28FF               	goto	i1l1408
  4954  00F4                     u50_20:
  4955  00F4                     i1l1404:
  4956                           
  4957                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  4958  00F4  087C               	movf	_eusartRxHead,w	;volatile
  4959  00F5  3E2A               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4960  00F6  0086               	movwf	6
  4961  00F7  0187               	clrf	7
  4962  00F8  1481               	bsf	1,1
  4963  00F9                     i1l1406:
  4964                           
  4965                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  4966  00F9  0020               	movlb	0	; select bank0
  4967  00FA  0852               	movf	_EUSART_FramingErrorHandler+1,w
  4968  00FB  008A               	movwf	10
  4969  00FC  0851               	movf	_EUSART_FramingErrorHandler,w
  4970  00FD  000A               	callw
  4971  00FE  3180               	pagesel	$
  4972  00FF                     i1l1408:
  4973                           
  4974                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
  4975  00FF  0023               	movlb	3	; select bank3
  4976  0100  1C9D               	btfss	29,1	;volatile
  4977  0101  2903               	goto	u51_21
  4978  0102  2904               	goto	u51_20
  4979  0103                     u51_21:
  4980  0103  290F               	goto	i1l1414
  4981  0104                     u51_20:
  4982  0104                     i1l1410:
  4983                           
  4984                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  4985  0104  087C               	movf	_eusartRxHead,w	;volatile
  4986  0105  3E2A               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4987  0106  0086               	movwf	6
  4988  0107  0187               	clrf	7
  4989  0108  1501               	bsf	1,2
  4990  0109                     i1l1412:
  4991                           
  4992                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  4993  0109  0020               	movlb	0	; select bank0
  4994  010A  0850               	movf	_EUSART_OverrunErrorHandler+1,w
  4995  010B  008A               	movwf	10
  4996  010C  084F               	movf	_EUSART_OverrunErrorHandler,w
  4997  010D  000A               	callw
  4998  010E  3180               	pagesel	$
  4999  010F                     i1l1414:
  5000                           
  5001                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  5002  010F  087C               	movf	_eusartRxHead,w	;volatile
  5003  0110  3E2A               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5004  0111  0086               	movwf	6
  5005  0112  0187               	clrf	7
  5006  0113  0801               	movf	1,w
  5007  0114  1903               	btfsc	3,2
  5008  0115  2917               	goto	u52_21
  5009  0116  2918               	goto	u52_20
  5010  0117                     u52_21:
  5011  0117  291F               	goto	i1l1418
  5012  0118                     u52_20:
  5013  0118                     i1l1416:
  5014                           
  5015                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  5016  0118  0020               	movlb	0	; select bank0
  5017  0119  084E               	movf	_EUSART_ErrorHandler+1,w
  5018  011A  008A               	movwf	10
  5019  011B  084D               	movf	_EUSART_ErrorHandler,w
  5020  011C  000A               	callw
  5021  011D  3180               	pagesel	$
  5022                           
  5023                           ;mcc_generated_files/eusart.c: 242:     } else {
  5024  011E  2922               	goto	i1l122
  5025  011F                     i1l1418:
  5026                           
  5027                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  5028  011F  3182  2210  3180   	fcall	_EUSART_RxDataHandler
  5029  0122                     i1l122:
  5030  0122  0008               	return
  5031  0123                     __end_of_EUSART_Receive_ISR:
  5032                           
  5033                           	psect	text21
  5034  029B                     __ptext21:	
  5035 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  5036 ;; Defined at:
  5037 ;;		line 261 in file "mcc_generated_files/eusart.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		None
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5055 ;;Total ram usage:        0 bytes
  5056 ;; Hardware stack levels used: 1
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_EUSART_Initialize
  5061 ;;		_EUSART_Receive_ISR
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           
  5066                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  5067  029B                     _EUSART_DefaultOverrunErrorHandler:
  5068  029B                     i1l1310:	
  5069                           ;incstack = 0
  5070                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  5071                           
  5072                           
  5073                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
  5074  029B  0023               	movlb	3	; select bank3
  5075  029C  121D               	bcf	29,4	;volatile
  5076                           
  5077                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
  5078  029D  161D               	bsf	29,4	;volatile
  5079  029E                     i1l132:
  5080  029E  0008               	return
  5081  029F                     __end_of_EUSART_DefaultOverrunErrorHandler:
  5082                           
  5083                           	psect	text22
  5084  02A5                     __ptext22:	
  5085 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  5086 ;; Defined at:
  5087 ;;		line 259 in file "mcc_generated_files/eusart.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		None
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;Total ram usage:        0 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_EUSART_Initialize
  5111 ;;		_EUSART_Receive_ISR
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           
  5116                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5117  02A5                     _EUSART_DefaultFramingErrorHandler:
  5118  02A5                     i1l129:	
  5119                           ;incstack = 0
  5120                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5121                           
  5122  02A5  0008               	return
  5123  02A6                     __end_of_EUSART_DefaultFramingErrorHandler:
  5124                           
  5125                           	psect	text23
  5126  029F                     __ptext23:	
  5127 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5128 ;; Defined at:
  5129 ;;		line 269 in file "mcc_generated_files/eusart.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;		None
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1    wreg      void 
  5136 ;; Registers used:
  5137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;Total ram usage:        0 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; Hardware stack levels required when called: 1
  5150 ;; This function calls:
  5151 ;;		_EUSART_RxDataHandler
  5152 ;; This function is called by:
  5153 ;;		_EUSART_Initialize
  5154 ;;		_EUSART_Receive_ISR
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           
  5159                           ;psect for function _EUSART_DefaultErrorHandler
  5160  029F                     _EUSART_DefaultErrorHandler:
  5161  029F                     i1l1312:	
  5162                           ;incstack = 0
  5163                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5164                           
  5165                           
  5166                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  5167  029F  3182  2210  3182   	fcall	_EUSART_RxDataHandler
  5168  02A2                     i1l135:
  5169  02A2  0008               	return
  5170  02A3                     __end_of_EUSART_DefaultErrorHandler:
  5171                           
  5172                           	psect	text24
  5173  0210                     __ptext24:	
  5174 ;; *************** function _EUSART_RxDataHandler *****************
  5175 ;; Defined at:
  5176 ;;		line 249 in file "mcc_generated_files/eusart.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;		None
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      void 
  5183 ;; Registers used:
  5184 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;Total ram usage:        1 bytes
  5195 ;; Hardware stack levels used: 1
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_EUSART_Receive_ISR
  5200 ;;		_EUSART_DefaultErrorHandler
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function _EUSART_RxDataHandler
  5206  0210                     _EUSART_RxDataHandler:
  5207  0210                     i1l1268:	
  5208                           ;incstack = 0
  5209                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5210                           
  5211                           
  5212                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  5213  0210  0023               	movlb	3	; select bank3
  5214  0211  0819               	movf	25,w	;volatile
  5215  0212  00F0               	movwf	??_EUSART_RxDataHandler
  5216  0213  087C               	movf	_eusartRxHead,w
  5217  0214  3E32               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5218  0215  0086               	movwf	6
  5219  0216  0187               	clrf	7
  5220  0217  0870               	movf	??_EUSART_RxDataHandler,w
  5221  0218  0081               	movwf	1
  5222  0219                     i1l1270:
  5223  0219  3001               	movlw	1
  5224  021A  00F0               	movwf	??_EUSART_RxDataHandler
  5225  021B  0870               	movf	??_EUSART_RxDataHandler,w
  5226  021C  07FC               	addwf	_eusartRxHead,f	;volatile
  5227  021D                     i1l1272:
  5228                           
  5229                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5230  021D  3008               	movlw	8
  5231  021E  027C               	subwf	_eusartRxHead,w	;volatile
  5232  021F  1C03               	skipc
  5233  0220  2A22               	goto	u43_21
  5234  0221  2A23               	goto	u43_20
  5235  0222                     u43_21:
  5236  0222  2A24               	goto	i1l1276
  5237  0223                     u43_20:
  5238  0223                     i1l1274:
  5239                           
  5240                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  5241  0223  01FC               	clrf	_eusartRxHead	;volatile
  5242  0224                     i1l1276:
  5243                           
  5244                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  5245  0224  3001               	movlw	1
  5246  0225  00F0               	movwf	??_EUSART_RxDataHandler
  5247  0226  0870               	movf	??_EUSART_RxDataHandler,w
  5248  0227  0020               	movlb	0	; select bank0
  5249  0228  07CA               	addwf	_eusartRxCount,f	;volatile
  5250  0229                     i1l126:
  5251  0229  0008               	return
  5252  022A                     __end_of_EUSART_RxDataHandler:
  5253  007E                     btemp	set	126	;btemp
  5254  007E                     int$flags	set	126
  5255  007E                     wtemp0	set	126
  5256                           
  5257                           	psect	config
  5258                           
  5259                           ;Config register CONFIG1 @ 0x8007
  5260                           ;	Oscillator Selection Bits
  5261                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5262                           ;	Power-up Timer Enable
  5263                           ;	PWRTE = OFF, PWRT disabled
  5264                           ;	MCLR Pin Function Select
  5265                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5266                           ;	Flash Program Memory Code Protection
  5267                           ;	CP = OFF, Program memory code protection is disabled
  5268                           ;	Brown-out Reset Enable
  5269                           ;	BOREN = ON, Brown-out Reset enabled
  5270                           ;	Clock Out Enable
  5271                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5272                           ;	Internal/External Switch Over
  5273                           ;	IESO = ON, Internal External Switch Over mode is enabled
  5274                           ;	Fail-Safe Clock Monitor Enable
  5275                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5276  8007                     	org	32775
  5277  8007  3FFC               	dw	16380
  5278                           
  5279                           ;Config register CONFIG2 @ 0x8008
  5280                           ;	Flash Memory Self-Write Protection
  5281                           ;	WRT = OFF, Write protection off
  5282                           ;	Peripheral Pin Select one-way control
  5283                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  5284                           ;	Zero Cross Detect Disable Bit
  5285                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5286                           ;	PLL Enable Bit
  5287                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  5288                           ;	Stack Overflow/Underflow Reset Enable
  5289                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5290                           ;	Brown-out Reset Voltage Selection
  5291                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5292                           ;	Low-Power Brown Out Reset
  5293                           ;	LPBOR = OFF, Low-Power BOR is disabled
  5294                           ;	Low-Voltage Programming Enable
  5295                           ;	LVP = ON, Low-voltage programming enabled
  5296  8008                     	org	32776
  5297  8008  3EFF               	dw	16127
  5298                           
  5299                           ;Config register CONFIG3 @ 0x8009
  5300                           ;	WDT Period Select
  5301                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  5302                           ;	Watchdog Timer Enable
  5303                           ;	WDTE = OFF, WDT disabled
  5304                           ;	WDT Window Select
  5305                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  5306                           ;	WDT Input Clock Selector
  5307                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  5308  8009                     	org	32777
  5309  8009  3F9F               	dw	16287

Data Sizes:
    Strings     10
    Constant    0
    Data        4
    BSS         47
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      3      67
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    match@strg	PTR unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[2]), STR_1(CODE[8]), 

    dollar_sign	PTR unsigned char  size(2) Largest target is 2
		 -> STR_2(CODE[2]), 

    anchor	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_match
    _parse->_getnext
    _match->_getnext
    _grab->_getnext
    _getnext->_EUSART_Read
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_match

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1859
                                              9 COMMON     2     2      0
                  _EUSART_Initialize
                  _SYSTEM_Initialize
                               _grab
                              _match
                              _parse
 ---------------------------------------------------------------------------------
 (1) _parse                                                3     3      0     170
                                              4 COMMON     3     3      0
                            _getnext
 ---------------------------------------------------------------------------------
 (1) _match                                                9     6      3     573
                                              4 COMMON     5     2      3
                                              0 BANK0      3     3      0
                            _getnext
 ---------------------------------------------------------------------------------
 (1) _grab                                                 2     2      0     136
                                              4 COMMON     2     2      0
                            _getnext
 ---------------------------------------------------------------------------------
 (2) _getnext                                              1     1      0      37
                                              3 COMMON     1     1      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      37
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     _EUSART_SetErrorHandler
     _EUSART_SetFramingErrorHandler
     _EUSART_SetOverrunErrorHandler
     _EUSART_SetRxInterruptHandler
     _EUSART_SetTxInterruptHandler
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _grab
     _getnext
       _EUSART_Read
       _EUSART_is_rx_ready
   _match
     _getnext
   _parse
     _getnext

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3      43       5       83.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      50      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      50      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 15 19:16:43 2022

                ?_EUSART_SetRxInterruptHandler 0071                                             l81 025E  
                                           l75 00E9                                             l94 01AB  
                              _timer0ReloadVal 005A                                            l201 0153  
                                          l141 0285                                            l221 0255  
                                          l150 027F                                            l144 0291  
                                          l224 026D                                            l138 028B  
                                          l147 0279                                            l341 01D0  
                                          l239 0248                                            l362 020F  
                                          l347 023A                                            l356 0181  
                                          _RC3 0073                                            _RB6 006E  
                                          _RB7 006F                                            _RC6 0076  
                                          _RC7 0077                                            u800 0188  
                                          u801 0187                                            u810 01A2  
                                          u811 01A1                                            u820 0232  
                                          u900 0180                                            u821 0231  
                                          u901 017F                                            u910 01F9  
                                          u830 01BA                                            u911 01F8  
                                          u831 01B9                                            u920 020F  
                                          u840 01C6                                            u921 020E  
                                          u841 01C3                                            u930 0079  
                                          u931 0078                                            u780 025D  
                                          u860 01CE                                            u940 008D  
                                          u781 025B                                            u861 01CB  
                                          u941 008C                                            u790 025E  
                                          u854 01C8                                            u950 009A  
                                          u951 0097                                            u880 0171  
                                          u881 0170                                            u890 017B  
                                          u874 01D0                                            u970 00A2  
                                          u891 017A                                            u971 009F  
                                          u964 009C                                            u984 00A4  
                       ??_EUSART_RxDataHandler 0070                                            _buf 0020  
                                          _ctr 0042                 ?_EUSART_SetFramingErrorHandler 0071  
                                          wreg 0009                                   ?_EUSART_Read 0070  
                                         l1300 00E0                                           l1302 00E4  
                                         l1240 028C                                           l1232 027A  
                                         l1304 00E5                                           l1320 012C  
                                         l1234 0274                                           l1306 00E6  
                                         l1330 013F                                           l1322 012E  
                                         l1314 0123                                           l1236 0286  
                                         l1308 00E7                                           l1340 014B  
                                         l1332 0142                                           l1324 0131  
                                         l1316 0127                                           l1420 0249  
                                         l1238 0280                                           l1350 026B  
                                         l1342 014D                                           l1334 0144  
                                         l1326 0133                                           l1318 012A  
                                         l1280 00AD                                           l1344 0150  
                                         l1336 0146                                           l1328 0139  
                                         l1352 023B                                           l1600 01C0  
                                         l1290 00C4                                           l1282 00B4  
                                         l1346 0267                                           l1338 0149  
                                         l1354 0240                                           l1610 0160  
                                         l1602 01C8                                           l1292 00C6  
                                         l1284 00BD                                           l1348 026A  
                                         l1356 0243                                           l1620 017B  
                                         l1612 0171                                           l1604 0154  
                                         l1294 00C7                                           l1286 00C0  
                                         l1278 00AB                                           l1358 0247  
                                         l1550 0256                                           l1622 0180  
                                         l1614 0172                                           l1606 0157  
                                         l1296 00CE                                           l1288 00C2  
                                         l1560 0198                                           l1616 0174  
                                         l1608 0159                                           l1298 00D5  
                                         l1570 01A8                                           l1562 019C  
                                         l1554 0182                                           l1634 01FB  
                                         l1626 01F3                                           l1618 0176  
                                         l1650 005D                                           l1572 01AA  
                                         l1564 01A2                                           l1556 0182  
                                         l1580 0232                                           l1636 0205  
                                         l1628 01F9                                           l1660 0079  
                                         l1652 0060                                           l1644 0058  
                                         l1566 01A3                                           l1558 0188  
                                         l1582 0239                                           l1638 0209  
                                         l1670 00A4                                           l1662 0088  
                                         l1654 0065                                           l1646 005B  
                                         l1568 01A5                                           l1576 022A  
                                         l1592 01AD                                           l1664 008D  
                                         l1656 0067                                           l1648 005C  
                                         l1578 022A                                           l1594 01B0  
                                         l1586 01AC                                           l1666 0093  
                                         l1658 0074                                           l1596 01B4  
                                         l1668 009C                                           l1598 01BA  
                                         STR_1 025F                                           STR_2 02A3  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           _grab 01F3  
                                         _main 0058                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0038                        __end_of_TMR0_Initialize 0249  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 026E  
                                        ?_grab 0070                                          ?_main 0070  
                                        i1l112 01F0                                          i1l122 0122  
                                        i1l115 01F2                                          i1l132 029E  
                                        i1l126 0229                                          i1l135 02A2  
                                        i1l129 02A5                                          i1l243 0296  
                                        i1l282 0036                                          i1l283 0036  
                                        i1l275 0012                                          i1l278 0026  
                                        u50_20 00F4                                          u50_21 00F3  
                                        u43_20 0223                                          u51_20 0104  
                                        u43_21 0222                                          u51_21 0103  
                                        u52_20 0118                                          u52_21 0117  
                                        u63_20 000A                                          u63_21 0009  
                                        u48_20 01D8                                          u64_20 000E  
                                        u48_21 01D7                                          u64_21 000D  
                                        u49_20 01EA                                          u65_20 0016  
                                        u49_21 01E9                                          u65_21 0015  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          u66_20 001B  
                                        u66_21 001A                                          u67_20 0020  
                                        u67_21 001F                                          u68_20 002B  
                                        u68_21 002A                                          u69_20 0030  
                                        u69_21 002F                                          _RXPPS 0E24  
                             __end_of_TMR0_ISR 0297                                __end_of_getnext 023B  
                                        _match 0154                                          _parse 01AC  
                                        grab@i 0075                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                                  match@length 0076                                __initialization 003A  
                                 __end_of_grab 0210                                   __end_of_main 00AB  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0073  
                                       ??_grab 0074                                         ??_main 0079  
    __end_of_EUSART_DefaultFramingErrorHandler 02A6     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 02A5                     _EUSART_OverrunErrorHandler 004F  
                                       ?_match 0074                                         ?_parse 0070  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _ANSELC 018E                     __end_of_EUSART_is_rx_ready 025F  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1STA 019D                                         i1l1310 029B  
                                       i1l1312 029F                                         i1l1400 00EA  
                                       i1l1410 0104                                         i1l1402 00EF  
                                       _RB7PPS 0E9F                                         i1l1412 0109  
                                       i1l1404 00F4                                         i1l1500 001B  
                                       i1l1270 0219                                         i1l1414 010F  
                                       i1l1406 00F9                                         i1l1422 0292  
                                       i1l1502 0020                                         i1l1272 021D  
                                       i1l1416 0118                                         i1l1408 00FF  
                                       i1l1424 0293                                         i1l1504 002B  
                                       _ODCONA 028C                                         i1l1274 0223  
                                       i1l1418 011F                                         i1l1506 0030  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l1276 0224                                         i1l1268 0210  
                                       i1l1390 01D8                                         i1l1392 01DF  
                                       i1l1394 01E4                                         i1l1396 01EA  
                                       i1l1388 01D1                                         i1l1492 0006  
                                       i1l1398 01EB                                         i1l1494 000A  
                                       i1l1496 000E                                         i1l1498 0016  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _TX1REG 019A                                         _TX1STA 019E  
                                       _anchor 005E                            _EUSART_Transmit_ISR 01D1  
                             ?_TMR0_Initialize 0070                                         _rxData 0047  
                                       _toggle 0058                                      ??_getnext 0073  
                                       parse@c 0075                                         parse@i 0076  
                         ?_EUSART_Transmit_ISR 0070                           __size_of_EUSART_Read 002A  
                            _SYSTEM_Initialize 0249                        __end_of__initialization 0054  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 027A  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 0274  
                               __pcstackCOMMON 0070                                   __pidataBANK0 0297  
                          ??_SYSTEM_Initialize 0074                                   match@retcode 0062  
                                    ?_TMR0_ISR 0070                                  __end_of_match 0182  
                                __end_of_parse 01D1                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 002A                ??_EUSART_SetOverrunErrorHandler 0073  
                                      ??_match 0077                      __end_of_SYSTEM_Initialize 0256  
                                      ??_parse 0074                          ??_EUSART_Transmit_ISR 0070  
                                   __pbssBANK0 0020                    __size_of_EUSART_Receive_ISR 0039  
                                   __pmaintext 0058                  ?_EUSART_SetTxInterruptHandler 0071  
             _EUSART_TxDefaultInterruptHandler 0055                                     ??_TMR0_ISR 0070  
                                   __pintentry 0004                   ??_EUSART_DefaultErrorHandler 0071  
                                _eusartRxCount 004A                  __size_of_EUSART_RxDataHandler 001A  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0073            __size_of_EUSART_DefaultErrorHandler 0004  
                                   _match_code 0057                                        __ptext1 01AC  
                                      __ptext2 0154                                        __ptext3 01F3  
                                      __ptext4 022A                                        __ptext5 0256  
                                      __ptext6 0182                                        __ptext7 0249  
                                      __ptext8 023B                                        __ptext9 0123  
                                      _getnext 022A                          _OSCILLATOR_Initialize 0267  
                     ??_PIN_MANAGER_Initialize 0071                     __size_of_SYSTEM_Initialize 000D  
                                      clrloop0 026F                           end_of_initialization 0054  
        __end_of_EUSART_SetOverrunErrorHandler 0286         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 0280                              _EUSART_Initialize 00AB  
                           ?_EUSART_Initialize 0070                             _EUSART_is_rx_ready 0256  
                          ??_EUSART_Initialize 0073                 ??_EUSART_SetTxInterruptHandler 0073  
                          ?_EUSART_is_rx_ready 0070                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 00EA                           ??_EUSART_is_rx_ready 0071  
           __end_of_EUSART_DefaultErrorHandler 02A3                     _EUSART_DefaultErrorHandler 029F  
                            __size_of_TMR0_ISR 0005                         ?_OSCILLATOR_Initialize 0070  
                          start_initialization 003A                       __size_of_TMR0_Initialize 000E  
              __size_of_PIN_MANAGER_Initialize 0031                                  ??_EUSART_Read 0071  
 EUSART_SetRxInterruptHandler@interruptHandler 0071   EUSART_SetTxInterruptHandler@interruptHandler 0071  
               ?_EUSART_SetOverrunErrorHandler 0071                     _EUSART_FramingErrorHandler 0051  
                       _EUSART_SetErrorHandler 028C                                    __pdataBANK0 005C  
                  __end_of_EUSART_Transmit_ISR 01F3                                    __pbssCOMMON 007B  
                                    ___latbits 0002                                  __pcstackBANK0 0060  
                   __end_of_EUSART_Receive_ISR 0123                     __size_of_EUSART_Initialize 003F  
             _EUSART_RxDefaultInterruptHandler 0053                            __end_of_EUSART_Read 01AC  
                        _TMR0_InterruptHandler 0044                                      __pnvBANK0 004D  
                 __end_of_EUSART_RxDataHandler 022A                         _PIN_MANAGER_Initialize 0123  
                         EUSART_Read@readValue 0072                                      _flag_tmr0 0048  
                                 _eusartRxHead 007C                                   _eusartTxHead 004C  
                                 _eusartRxTail 007B                                   _eusartTxTail 004B  
                 ??_INTERRUPT_InterruptManager 0071                                      _grab_flag 0059  
                      _eusartTxBufferRemaining 005B                                       ?_getnext 0070  
                                     _BAUD1CON 019F                                 __size_of_match 002E  
                               __size_of_parse 0025                                 _eusartRxBuffer 0032  
                            ??_TMR0_Initialize 0071                                 _eusartTxBuffer 003A  
       EUSART_SetErrorHandler@interruptHandler 0071                                      clear_ram0 026E  
                                     _PIE1bits 0090                              _eusartRxLastError 0049  
          __size_of_INTERRUPT_InterruptManager 0034                                       _PIR1bits 0010  
              ??_EUSART_SetFramingErrorHandler 0073                                       _TMR0_ISR 0292  
    __end_of_EUSART_DefaultOverrunErrorHandler 029F     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 029B                                    _dollar_sign 005C  
                                  _EUSART_Read 0182                                      match@flag 0061  
                                    match@next 0060                                      match@strg 0074  
                      ??_OSCILLATOR_Initialize 0071                            _EUSART_ErrorHandler 004D  
                  ?_EUSART_DefaultErrorHandler 0070                               __size_of_getnext 0011  
                         _EUSART_RxDataHandler 0210                                       __ptext10 0267  
                                     __ptext11 00AB                                       __ptext20 00EA  
                                     __ptext12 0274                                       __ptext21 029B  
                                     __ptext13 027A                                       __ptext22 02A5  
                                     __ptext14 0280                                       __ptext23 029F  
                                     __ptext15 0286                                       __ptext24 0210  
                                     __ptext16 028C                                       __ptext18 0292  
                                     __ptext19 01D1                    __size_of_EUSART_is_rx_ready 0009  
                                __size_of_grab 001D                                  __size_of_main 0053  
                      ?_EUSART_SetErrorHandler 0071                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0071                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0038                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 028C         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0286                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0292  
         __end_of_EUSART_SetRxInterruptHandler 0280          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 027A                             _EUSART_Receive_ISR 00EA  
EUSART_SetFramingErrorHandler@interruptHandler 0071                                  __pstringtext1 025F  
                                __pstringtext2 02A3                                  __pstringtext3 0000  
                                   _OPTION_REG 0095                            ?_EUSART_Receive_ISR 0070  
                              _TMR0_Initialize 023B                                    _prev_rxData 0046  
                                   _TX1STAbits 019E                   __size_of_EUSART_Transmit_ISR 0022  
               __end_of_PIN_MANAGER_Initialize 0154                           ??_EUSART_Receive_ISR 0071  
